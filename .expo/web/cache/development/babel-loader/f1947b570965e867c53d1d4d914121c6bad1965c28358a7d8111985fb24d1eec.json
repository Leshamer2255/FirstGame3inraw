{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar BOARD_SIZE = 6;\nvar EMOJIS = ['₿', 'Ξ', '🪙', '🐕', '◎', '₳'];\nvar BONUS = '🚀';\nvar SUPER_BONUS = '💥';\nvar CROSS_BONUS = '💣';\nvar ANIMATION_DURATION = 350;\nvar LEVELS = [{\n  time: 60,\n  target: 600\n}, {\n  time: 50,\n  target: 900\n}, {\n  time: 40,\n  target: 1300\n}, {\n  time: 35,\n  target: 1800\n}, {\n  time: 30,\n  target: 2500\n}];\nvar INITIAL_LIVES = 3;\nvar MISSIONS = [{\n  symbol: '🪙',\n  name: 'Coin',\n  count: 8\n}, {\n  symbol: '🐕',\n  name: 'Dogecoin',\n  count: 10\n}, {\n  symbol: '◎',\n  name: 'Solana',\n  count: 12\n}, {\n  symbol: '⚡',\n  name: 'Lightning',\n  count: 9\n}, {\n  symbol: '🌙',\n  name: 'Mooncoin',\n  count: 11\n}, {\n  symbol: '🔥',\n  name: 'Firecoin',\n  count: 13\n}, {\n  symbol: '₿',\n  name: 'Bitcoin',\n  count: 15\n}, {\n  symbol: 'Ξ',\n  name: 'Ethereum',\n  count: 14\n}, {\n  symbol: '💎',\n  name: 'Diamond',\n  count: 16\n}, {\n  symbol: '🚀',\n  name: 'Rocket',\n  count: 17\n}];\nvar ALL_TOKENS = ['₿', 'Ξ', '🪙', '🐕', '◎', '₳', '⚡', '🌙', '🔥', '💎', '🚀', '🎯', '⭐', '🌟', '💫', '🌍', '🌊', '🌪️', '🌈', '🎪'];\nvar INITIAL_AVAILABLE_TOKENS = ['🪙', '🐕', '◎', '⚡', '🌙', '🔥'];\nvar COIN_SHOP = [{\n  symbol: '₿',\n  name: 'Bitcoin',\n  price: 1500,\n  description: 'Король криптовалют'\n}, {\n  symbol: 'Ξ',\n  name: 'Ethereum',\n  price: 1200,\n  description: 'Смарт-контракти'\n}, {\n  symbol: '🪙',\n  name: 'Coin',\n  price: 0,\n  description: 'Базова монета',\n  owned: true\n}, {\n  symbol: '🐕',\n  name: 'Dogecoin',\n  price: 0,\n  description: 'Мем-монета',\n  owned: true\n}, {\n  symbol: '◎',\n  name: 'Solana',\n  price: 0,\n  description: 'Швидкі транзакції',\n  owned: true\n}, {\n  symbol: '₳',\n  name: 'Cardano',\n  price: 1000,\n  description: 'Науковий підхід'\n}, {\n  symbol: '⚡',\n  name: 'Lightning',\n  price: 0,\n  description: 'Швидкі платежі',\n  owned: true\n}, {\n  symbol: '🌙',\n  name: 'Mooncoin',\n  price: 0,\n  description: 'До місяця!',\n  owned: true\n}, {\n  symbol: '🔥',\n  name: 'Firecoin',\n  price: 0,\n  description: 'Гаряча монета',\n  owned: true\n}, {\n  symbol: '💎',\n  name: 'Diamond',\n  price: 2000,\n  description: 'Дорогоцінний камінь'\n}, {\n  symbol: '🚀',\n  name: 'Rocket',\n  price: 1800,\n  description: 'До зірок!'\n}, {\n  symbol: '🎯',\n  name: 'Target',\n  price: 1600,\n  description: 'Точна ціль'\n}, {\n  symbol: '⭐',\n  name: 'Starcoin',\n  price: 1400,\n  description: 'Зіркова монета'\n}, {\n  symbol: '🌟',\n  name: 'Sparkle',\n  price: 1300,\n  description: 'Блискуча'\n}, {\n  symbol: '💫',\n  name: 'Shooting',\n  price: 1700,\n  description: 'Падаюча зірка'\n}, {\n  symbol: '🌍',\n  name: 'Earth',\n  price: 1100,\n  description: 'Планетарна'\n}, {\n  symbol: '🌊',\n  name: 'Wave',\n  price: 900,\n  description: 'Хвиляста'\n}, {\n  symbol: '🌪️',\n  name: 'Tornado',\n  price: 1900,\n  description: 'Буревій'\n}, {\n  symbol: '🌈',\n  name: 'Rainbow',\n  price: 2200,\n  description: 'Веселкова'\n}, {\n  symbol: '🎪',\n  name: 'Circus',\n  price: 2500,\n  description: 'Циркова'\n}];\nvar GAME_MODES = {\n  campaign: {\n    name: 'Кампанія',\n    description: 'Проходь рівні та виконуй місії',\n    lives: 3,\n    hasMissions: true,\n    hasTimer: true,\n    hasLevels: true,\n    startingTokens: ['🪙', '🐕', '◎', '⚡', '🌙', '🔥'],\n    shopAvailable: true\n  },\n  classic: {\n    name: 'Класичний',\n    description: 'Безмежна гра без обмежень',\n    lives: 999,\n    hasMissions: false,\n    hasTimer: false,\n    hasLevels: false,\n    startingTokens: ['🪙', '🐕', '◎', '⚡', '🌙', '🔥', '💎', '🚀'],\n    shopAvailable: true\n  },\n  challenge: {\n    name: 'Челендж',\n    description: '60 секунд на максимум очок!',\n    lives: 1,\n    hasMissions: false,\n    hasTimer: true,\n    hasLevels: false,\n    startingTokens: ['🪙', '🐕', '◎', '⚡', '🌙', '🔥', '💎', '🚀', '🎯', '⭐'],\n    shopAvailable: false,\n    timeLimit: 60\n  },\n  speedrun: {\n    name: 'Спідран',\n    description: 'Швидкі матчі = більше часу!',\n    lives: 3,\n    hasMissions: false,\n    hasTimer: true,\n    hasLevels: false,\n    startingTokens: ['🪙', '🐕', '◎', '⚡', '🌙', '🔥'],\n    shopAvailable: false,\n    timeLimit: 30,\n    timeBonus: true\n  },\n  puzzle: {\n    name: 'Пазл',\n    description: 'Обмежена кількість ходів',\n    lives: 3,\n    hasMissions: false,\n    hasTimer: false,\n    hasLevels: false,\n    startingTokens: ['🪙', '🐕', '◎', '⚡', '🌙', '🔥'],\n    shopAvailable: false,\n    moveLimit: 20\n  }\n};\nexport default function App() {\n  var _useState = useState(INITIAL_AVAILABLE_TOKENS),\n    _useState2 = _slicedToArray(_useState, 2),\n    availableTokens = _useState2[0],\n    setAvailableTokens = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showShop = _useState4[0],\n    setShowShop = _useState4[1];\n  var getRandomEmoji = function getRandomEmoji() {\n    return availableTokens[Math.floor(Math.random() * availableTokens.length)];\n  };\n  var generateBoard = function generateBoard() {\n    return Array.from({\n      length: BOARD_SIZE\n    }, function () {\n      return Array.from({\n        length: BOARD_SIZE\n      }, getRandomEmoji);\n    });\n  };\n  var _useState5 = useState(function () {\n      return Array.from({\n        length: BOARD_SIZE\n      }, function () {\n        return Array.from({\n          length: BOARD_SIZE\n        }, function () {\n          return INITIAL_AVAILABLE_TOKENS[Math.floor(Math.random() * INITIAL_AVAILABLE_TOKENS.length)];\n        });\n      });\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    board = _useState6[0],\n    setBoard = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selected = _useState8[0],\n    setSelected = _useState8[1];\n  var _useState9 = useState(null),\n    _useState0 = _slicedToArray(_useState9, 2),\n    matches = _useState0[0],\n    setMatches = _useState0[1];\n  var _useState1 = useState([]),\n    _useState10 = _slicedToArray(_useState1, 2),\n    bonuses = _useState10[0],\n    setBonuses = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isAnimating = _useState12[0],\n    setIsAnimating = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    score = _useState14[0],\n    setScore = _useState14[1];\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    level = _useState16[0],\n    setLevel = _useState16[1];\n  var _useState17 = useState(LEVELS[0].time),\n    _useState18 = _slicedToArray(_useState17, 2),\n    timer = _useState18[0],\n    setTimer = _useState18[1];\n  var _useState19 = useState(LEVELS[0].target),\n    _useState20 = _slicedToArray(_useState19, 2),\n    targetScore = _useState20[0],\n    setTargetScore = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    gameOver = _useState22[0],\n    setGameOver = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    levelCompleted = _useState24[0],\n    setLevelCompleted = _useState24[1];\n  var _useState25 = useState(INITIAL_LIVES),\n    _useState26 = _slicedToArray(_useState25, 2),\n    lives = _useState26[0],\n    setLives = _useState26[1];\n  var opacityAnim = useRef(Array.from({\n    length: BOARD_SIZE\n  }, function () {\n    return Array.from({\n      length: BOARD_SIZE\n    }, function () {\n      return new Animated.Value(1);\n    });\n  })).current;\n  var overlayAnim = useRef(new Animated.Value(0)).current;\n  var _useState27 = useState(0),\n    _useState28 = _slicedToArray(_useState27, 2),\n    missionProgress = _useState28[0],\n    setMissionProgress = _useState28[1];\n  var _useState29 = useState(null),\n    _useState30 = _slicedToArray(_useState29, 2),\n    hint = _useState30[0],\n    setHint = _useState30[1];\n  var hintAnim = useRef(new Animated.Value(1)).current;\n  var hintTimer = useRef(null);\n  var hintAnimation = useRef(null);\n  var _useState31 = useState(getInitialWallet),\n    _useState32 = _slicedToArray(_useState31, 2),\n    wallet = _useState32[0],\n    setWallet = _useState32[1];\n  var _useState33 = useState(false),\n    _useState34 = _slicedToArray(_useState33, 2),\n    showWallet = _useState34[0],\n    setShowWallet = _useState34[1];\n  var _useState35 = useState(getInitialTokenPrices),\n    _useState36 = _slicedToArray(_useState35, 2),\n    tokenPrices = _useState36[0],\n    setTokenPrices = _useState36[1];\n  var _useState37 = useState('main'),\n    _useState38 = _slicedToArray(_useState37, 2),\n    screen = _useState38[0],\n    setScreen = _useState38[1];\n  var _useState39 = useState('campaign'),\n    _useState40 = _slicedToArray(_useState39, 2),\n    gameMode = _useState40[0],\n    setGameMode = _useState40[1];\n  var _useState41 = useState(20),\n    _useState42 = _slicedToArray(_useState41, 2),\n    movesLeft = _useState42[0],\n    setMovesLeft = _useState42[1];\n  var _useState43 = useState(0),\n    _useState44 = _slicedToArray(_useState43, 2),\n    timeBonus = _useState44[0],\n    setTimeBonus = _useState44[1];\n  var _useState45 = useState({}),\n    _useState46 = _slicedToArray(_useState45, 2),\n    earnedCoins = _useState46[0],\n    setEarnedCoins = _useState46[1];\n  var _useState47 = useState(false),\n    _useState48 = _slicedToArray(_useState47, 2),\n    noMovesAvailable = _useState48[0],\n    setNoMovesAvailable = _useState48[1];\n  function cloneBoard(board) {\n    return board.map(function (row) {\n      return _toConsumableArray(row);\n    });\n  }\n  function areAdjacent(_ref, _ref2) {\n    var _ref3 = _slicedToArray(_ref, 2),\n      r1 = _ref3[0],\n      c1 = _ref3[1];\n    var _ref4 = _slicedToArray(_ref2, 2),\n      r2 = _ref4[0],\n      c2 = _ref4[1];\n    return Math.abs(r1 - r2) === 1 && c1 === c2 || Math.abs(c1 - c2) === 1 && r1 === r2;\n  }\n  function findMatches(board) {\n    var matches = Array.from({\n      length: BOARD_SIZE\n    }, function () {\n      return Array(BOARD_SIZE).fill(false);\n    });\n    var bonuses = [];\n    var matchGroups = [];\n    var bonusTypes = Array.from({\n      length: BOARD_SIZE\n    }, function () {\n      return Array(BOARD_SIZE).fill(null);\n    });\n    for (var row = 0; row < BOARD_SIZE; row++) {\n      var count = 1;\n      for (var col = 1; col < BOARD_SIZE; col++) {\n        if (board[row][col] && board[row][col] === board[row][col - 1]) {\n          count++;\n        } else {\n          if (count >= 3) {\n            var group = [];\n            for (var k = 0; k < count; k++) {\n              matches[row][col - 1 - k] = true;\n              group.push([row, col - 1 - k]);\n            }\n            matchGroups.push({\n              type: 'row',\n              count: count,\n              cells: group,\n              value: board[row][col - 1]\n            });\n            if (count === 4) {\n              var bonusCol = col - 1 - Math.floor(Math.random() * count);\n              bonuses.push({\n                type: 'row',\n                row: row,\n                col: bonusCol,\n                bonusType: BONUS\n              });\n              bonusTypes[row][bonusCol] = BONUS;\n            }\n            if (count >= 5) {\n              var _bonusCol = col - 1 - Math.floor(Math.random() * count);\n              bonuses.push({\n                type: 'row',\n                row: row,\n                col: _bonusCol,\n                bonusType: SUPER_BONUS,\n                color: board[row][col - 1]\n              });\n              bonusTypes[row][_bonusCol] = SUPER_BONUS;\n            }\n          }\n          count = 1;\n        }\n      }\n      if (count >= 3) {\n        var _group = [];\n        for (var _k = 0; _k < count; _k++) {\n          matches[row][BOARD_SIZE - 1 - _k] = true;\n          _group.push([row, BOARD_SIZE - 1 - _k]);\n        }\n        matchGroups.push({\n          type: 'row',\n          count: count,\n          cells: _group,\n          value: board[row][BOARD_SIZE - 1]\n        });\n        if (count === 4) {\n          var _bonusCol2 = BOARD_SIZE - 1 - Math.floor(Math.random() * count);\n          bonuses.push({\n            type: 'row',\n            row: row,\n            col: _bonusCol2,\n            bonusType: BONUS\n          });\n          bonusTypes[row][_bonusCol2] = BONUS;\n        }\n        if (count >= 5) {\n          var _bonusCol3 = BOARD_SIZE - 1 - Math.floor(Math.random() * count);\n          bonuses.push({\n            type: 'row',\n            row: row,\n            col: _bonusCol3,\n            bonusType: SUPER_BONUS,\n            color: board[row][BOARD_SIZE - 1]\n          });\n          bonusTypes[row][_bonusCol3] = SUPER_BONUS;\n        }\n      }\n    }\n    for (var _col = 0; _col < BOARD_SIZE; _col++) {\n      var _count = 1;\n      for (var _row = 1; _row < BOARD_SIZE; _row++) {\n        if (board[_row][_col] && board[_row][_col] === board[_row - 1][_col]) {\n          _count++;\n        } else {\n          if (_count >= 3) {\n            var _group2 = [];\n            for (var _k2 = 0; _k2 < _count; _k2++) {\n              matches[_row - 1 - _k2][_col] = true;\n              _group2.push([_row - 1 - _k2, _col]);\n            }\n            matchGroups.push({\n              type: 'col',\n              count: _count,\n              cells: _group2,\n              value: board[_row - 1][_col]\n            });\n            if (_count === 4) {\n              var bonusRow = _row - 1 - Math.floor(Math.random() * _count);\n              bonuses.push({\n                type: 'col',\n                row: bonusRow,\n                col: _col,\n                bonusType: BONUS\n              });\n              bonusTypes[bonusRow][_col] = BONUS;\n            }\n            if (_count >= 5) {\n              var _bonusRow = _row - 1 - Math.floor(Math.random() * _count);\n              bonuses.push({\n                type: 'col',\n                row: _bonusRow,\n                col: _col,\n                bonusType: SUPER_BONUS,\n                color: board[_row - 1][_col]\n              });\n              bonusTypes[_bonusRow][_col] = SUPER_BONUS;\n            }\n          }\n          _count = 1;\n        }\n      }\n      if (_count >= 3) {\n        var _group3 = [];\n        for (var _k3 = 0; _k3 < _count; _k3++) {\n          matches[BOARD_SIZE - 1 - _k3][_col] = true;\n          _group3.push([BOARD_SIZE - 1 - _k3, _col]);\n        }\n        matchGroups.push({\n          type: 'col',\n          count: _count,\n          cells: _group3,\n          value: board[BOARD_SIZE - 1][_col]\n        });\n        if (_count === 4) {\n          var _bonusRow2 = BOARD_SIZE - 1 - Math.floor(Math.random() * _count);\n          bonuses.push({\n            type: 'col',\n            row: _bonusRow2,\n            col: _col,\n            bonusType: BONUS\n          });\n          bonusTypes[_bonusRow2][_col] = BONUS;\n        }\n        if (_count >= 5) {\n          var _bonusRow3 = BOARD_SIZE - 1 - Math.floor(Math.random() * _count);\n          bonuses.push({\n            type: 'col',\n            row: _bonusRow3,\n            col: _col,\n            bonusType: SUPER_BONUS,\n            color: board[BOARD_SIZE - 1][_col]\n          });\n          bonusTypes[_bonusRow3][_col] = SUPER_BONUS;\n        }\n      }\n    }\n    var _loop = function _loop(_row2) {\n      var _loop2 = function _loop2(_col2) {\n        if (matches[_row2][_col2]) {\n          var inRow = false,\n            inCol = false;\n          for (var _group4 of matchGroups) {\n            if (_group4.cells.some(function (_ref5) {\n              var _ref6 = _slicedToArray(_ref5, 2),\n                r = _ref6[0],\n                c = _ref6[1];\n              return r === _row2 && c === _col2;\n            })) {\n              if (_group4.type === 'row' && _group4.count >= 3) inRow = true;\n              if (_group4.type === 'col' && _group4.count >= 3) inCol = true;\n            }\n          }\n          if (inRow && inCol) {\n            bonuses.push({\n              type: 'cross',\n              row: _row2,\n              col: _col2,\n              bonusType: CROSS_BONUS\n            });\n            bonusTypes[_row2][_col2] = CROSS_BONUS;\n          }\n        }\n      };\n      for (var _col2 = 0; _col2 < BOARD_SIZE; _col2++) {\n        _loop2(_col2);\n      }\n    };\n    for (var _row2 = 0; _row2 < BOARD_SIZE; _row2++) {\n      _loop(_row2);\n    }\n    return {\n      matches: matches,\n      bonuses: bonuses,\n      matchGroups: matchGroups,\n      bonusTypes: bonusTypes\n    };\n  }\n  function removeMatchesAndDrop(board, matches) {\n    var bonusesToPlace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var newBoard = cloneBoard(board);\n    for (var row = 0; row < BOARD_SIZE; row++) {\n      for (var col = 0; col < BOARD_SIZE; col++) {\n        if (matches[row][col]) {\n          newBoard[row][col] = null;\n        }\n      }\n    }\n    for (var bonus of bonusesToPlace) {\n      if (newBoard[bonus.row][bonus.col] === null) {\n        newBoard[bonus.row][bonus.col] = bonus.bonusType;\n      }\n    }\n    for (var _col3 = 0; _col3 < BOARD_SIZE; _col3++) {\n      var pointer = BOARD_SIZE - 1;\n      for (var _row3 = BOARD_SIZE - 1; _row3 >= 0; _row3--) {\n        if (newBoard[_row3][_col3]) {\n          newBoard[pointer][_col3] = newBoard[_row3][_col3];\n          if (pointer !== _row3) newBoard[_row3][_col3] = null;\n          pointer--;\n        }\n      }\n      for (var _row4 = pointer; _row4 >= 0; _row4--) {\n        newBoard[_row4][_col3] = getRandomEmoji();\n      }\n    }\n    return newBoard;\n  }\n  function hasAnyMatches(matches) {\n    for (var row = 0; row < BOARD_SIZE; row++) {\n      for (var col = 0; col < BOARD_SIZE; col++) {\n        if (matches[row][col]) return true;\n      }\n    }\n    return false;\n  }\n  function activateBonus(board, bonus, colorForSuper) {\n    var newBoard = cloneBoard(board);\n    if (bonus.bonusType === BONUS) {\n      if (bonus.type === 'row') {\n        for (var col = 0; col < BOARD_SIZE; col++) {\n          newBoard[bonus.row][col] = null;\n        }\n      } else if (bonus.type === 'col') {\n        for (var row = 0; row < BOARD_SIZE; row++) {\n          newBoard[row][bonus.col] = null;\n        }\n      }\n    } else if (bonus.bonusType === SUPER_BONUS) {\n      for (var _row5 = 0; _row5 < BOARD_SIZE; _row5++) {\n        for (var _col4 = 0; _col4 < BOARD_SIZE; _col4++) {\n          if (board[_row5][_col4] === colorForSuper) {\n            newBoard[_row5][_col4] = null;\n          }\n        }\n      }\n    } else if (bonus.bonusType === CROSS_BONUS) {\n      for (var _col5 = 0; _col5 < BOARD_SIZE; _col5++) {\n        newBoard[bonus.row][_col5] = null;\n      }\n      for (var _row6 = 0; _row6 < BOARD_SIZE; _row6++) {\n        newBoard[_row6][bonus.col] = null;\n      }\n    }\n    return newBoard;\n  }\n  function getBonusMatches(board, bonus, colorForSuper) {\n    var matches = Array.from({\n      length: BOARD_SIZE\n    }, function () {\n      return Array(BOARD_SIZE).fill(false);\n    });\n    if (bonus.bonusType === BONUS) {\n      if (bonus.type === 'row') {\n        for (var col = 0; col < BOARD_SIZE; col++) {\n          matches[bonus.row][col] = true;\n        }\n      } else if (bonus.type === 'col') {\n        for (var row = 0; row < BOARD_SIZE; row++) {\n          matches[row][bonus.col] = true;\n        }\n      }\n    } else if (bonus.bonusType === SUPER_BONUS) {\n      for (var _row7 = 0; _row7 < BOARD_SIZE; _row7++) {\n        for (var _col6 = 0; _col6 < BOARD_SIZE; _col6++) {\n          if (board[_row7][_col6] === colorForSuper) {\n            matches[_row7][_col6] = true;\n          }\n        }\n      }\n    } else if (bonus.bonusType === CROSS_BONUS) {\n      for (var _col7 = 0; _col7 < BOARD_SIZE; _col7++) {\n        matches[bonus.row][_col7] = true;\n      }\n      for (var _row8 = 0; _row8 < BOARD_SIZE; _row8++) {\n        matches[_row8][bonus.col] = true;\n      }\n    }\n    return matches;\n  }\n  function findPossibleMove(board) {\n    for (var r = 0; r < BOARD_SIZE; r++) {\n      for (var c = 0; c < BOARD_SIZE; c++) {\n        if (c < BOARD_SIZE - 1) {\n          var newBoard = cloneBoard(board);\n          var _ref7 = [newBoard[r][c + 1], newBoard[r][c]];\n          newBoard[r][c] = _ref7[0];\n          newBoard[r][c + 1] = _ref7[1];\n          if (hasAnyMatches(findMatches(newBoard).matches)) {\n            return [[r, c], [r, c + 1]];\n          }\n        }\n        if (r < BOARD_SIZE - 1) {\n          var _newBoard = cloneBoard(board);\n          var _ref8 = [_newBoard[r + 1][c], _newBoard[r][c]];\n          _newBoard[r][c] = _ref8[0];\n          _newBoard[r + 1][c] = _ref8[1];\n          if (hasAnyMatches(findMatches(_newBoard).matches)) {\n            return [[r, c], [r + 1, c]];\n          }\n        }\n      }\n    }\n    return null;\n  }\n  function getRandomPrice() {\n    return (Math.random() * 10000 + 10).toFixed(2);\n  }\n  function getInitialWallet() {\n    var obj = {};\n    ALL_TOKENS.forEach(function (t) {\n      return obj[t] = {\n        amount: 0\n      };\n    });\n    return obj;\n  }\n  function getInitialTokenPrices() {\n    var obj = {};\n    ALL_TOKENS.forEach(function (t) {\n      return obj[t] = {\n        price: getRandomPrice(),\n        prevPrice: null\n      };\n    });\n    return obj;\n  }\n  function updateMarketPrices() {\n    setTokenPrices(function (prices) {\n      var obj = {};\n      ALL_TOKENS.forEach(function (t) {\n        var _prices$t$price, _prices$t;\n        obj[t] = {\n          prevPrice: (_prices$t$price = (_prices$t = prices[t]) == null ? void 0 : _prices$t.price) != null ? _prices$t$price : null,\n          price: getRandomPrice()\n        };\n      });\n      return obj;\n    });\n  }\n  useEffect(function () {\n    if (gameOver || levelCompleted) return;\n    var mode = GAME_MODES[gameMode];\n    if (mode.hasTimer && timer <= 0) {\n      if (mode.hasLevels) {\n        if (score < targetScore) {\n          if (lives > 1) {\n            setLives(function (l) {\n              return l - 1;\n            });\n            setTimer(mode.timeLimit || LEVELS[level].time);\n            setScore(0);\n            setBoard(generateBoard());\n            setSelected(null);\n            setMatches(null);\n            setBonuses([]);\n          } else {\n            setLives(0);\n            setGameOver(true);\n          }\n        } else {\n          setGameOver(true);\n        }\n      } else {\n        setGameOver(true);\n      }\n      return;\n    }\n    if (mode.moveLimit && movesLeft <= 0) {\n      if (score >= targetScore) {\n        setLevelCompleted(true);\n      } else {\n        setGameOver(true);\n      }\n      return;\n    }\n    if (mode.hasTimer) {\n      var interval = setInterval(function () {\n        setTimer(function (t) {\n          return t - 1;\n        });\n      }, 1000);\n      return function () {\n        return clearInterval(interval);\n      };\n    }\n  }, [timer, gameOver, levelCompleted, score, targetScore, lives, level, gameMode, movesLeft]);\n  useEffect(function () {\n    var mode = GAME_MODES[gameMode];\n    if (mode.hasLevels && !levelCompleted && score >= targetScore) {\n      if (mode.hasMissions) {\n        var mission = MISSIONS[level % MISSIONS.length];\n        if (missionProgress >= mission.count) {\n          setLevelCompleted(true);\n        }\n      } else {\n        setLevelCompleted(true);\n      }\n    } else if (!mode.hasLevels && score >= targetScore) {\n      setLevelCompleted(true);\n    }\n  }, [score, targetScore, levelCompleted, level, gameMode, missionProgress]);\n  useEffect(function () {\n    var b = board;\n    var _findMatches = findMatches(b),\n      m = _findMatches.matches,\n      bs = _findMatches.bonuses,\n      mg = _findMatches.matchGroups;\n    var _loop3 = function _loop3() {\n      var points = 0;\n      for (var group of mg) {\n        if (group.count === 3) points += 10 * 3;else if (group.count >= 4) points += 20 * group.count;\n      }\n      setScore(function (s) {\n        return s + points;\n      });\n      b = removeMatchesAndDrop(b, m, bs);\n      var res = findMatches(b);\n      m = res.matches;\n      bs = res.bonuses;\n      mg = res.matchGroups;\n    };\n    while (hasAnyMatches(m)) {\n      _loop3();\n    }\n    setBoard(b);\n  }, []);\n  useEffect(function () {\n    if (!matches) return;\n    setIsAnimating(true);\n    var animations = [];\n    for (var row = 0; row < BOARD_SIZE; row++) {\n      for (var col = 0; col < BOARD_SIZE; col++) {\n        if (matches[row][col]) {\n          animations.push(Animated.timing(opacityAnim[row][col], {\n            toValue: 0,\n            duration: ANIMATION_DURATION,\n            useNativeDriver: true\n          }));\n        }\n      }\n    }\n    Animated.parallel(animations).start(function () {\n      var points = 0;\n      if (matches && matches.length) {\n        var _findMatches2 = findMatches(board),\n          matchGroups = _findMatches2.matchGroups;\n        for (var group of matchGroups) {\n          if (group.count === 3) points += 10 * 3;else if (group.count >= 4) points += 20 * group.count;\n        }\n      }\n      setScore(function (s) {\n        return s + points;\n      });\n      var newBoard = removeMatchesAndDrop(board, matches, bonuses);\n      for (var _row9 = 0; _row9 < BOARD_SIZE; _row9++) {\n        for (var _col8 = 0; _col8 < BOARD_SIZE; _col8++) {\n          opacityAnim[_row9][_col8].setValue(1);\n        }\n      }\n      if (bonuses.length > 0) {\n        var tempBoard = newBoard;\n        var bonusMatches = null;\n        var bonusIndex = 0;\n        function activateNextBonus() {\n          if (bonusIndex >= bonuses.length) {\n            var res = findMatches(tempBoard);\n            if (hasAnyMatches(res.matches)) {\n              setBoard(tempBoard);\n              setMatches(res.matches);\n              setBonuses(res.bonuses);\n            } else {\n              setBoard(tempBoard);\n              setMatches(null);\n              setBonuses([]);\n              setIsAnimating(false);\n            }\n            return;\n          }\n          var bonus = bonuses[bonusIndex];\n          bonusMatches = getBonusMatches(tempBoard, bonus, bonus.color);\n          var collectedFromBonus = 0;\n          for (var _row0 = 0; _row0 < BOARD_SIZE; _row0++) {\n            for (var _col9 = 0; _col9 < BOARD_SIZE; _col9++) {\n              if (bonusMatches[_row0][_col9] && tempBoard[_row0][_col9] === MISSIONS[level % MISSIONS.length].symbol) {\n                collectedFromBonus++;\n              }\n            }\n          }\n          if (collectedFromBonus > 0) setMissionProgress(function (p) {\n            return p + collectedFromBonus;\n          });\n          var bonusPoints = 0;\n          for (var _row1 = 0; _row1 < BOARD_SIZE; _row1++) {\n            for (var _col0 = 0; _col0 < BOARD_SIZE; _col0++) {\n              if (bonusMatches[_row1][_col0]) bonusPoints += 50;\n            }\n          }\n          setScore(function (s) {\n            return s + bonusPoints;\n          });\n          var bonusAnims = [];\n          for (var _row10 = 0; _row10 < BOARD_SIZE; _row10++) {\n            for (var _col1 = 0; _col1 < BOARD_SIZE; _col1++) {\n              if (bonusMatches[_row10][_col1]) {\n                bonusAnims.push(Animated.timing(opacityAnim[_row10][_col1], {\n                  toValue: 0,\n                  duration: ANIMATION_DURATION,\n                  useNativeDriver: true\n                }));\n              }\n            }\n          }\n          Animated.parallel(bonusAnims).start(function () {\n            tempBoard = activateBonus(tempBoard, bonus, bonus.color);\n            for (var _row11 = 0; _row11 < BOARD_SIZE; _row11++) {\n              for (var _col10 = 0; _col10 < BOARD_SIZE; _col10++) {\n                if (bonusMatches[_row11][_col10]) {\n                  opacityAnim[_row11][_col10].setValue(1);\n                }\n              }\n            }\n            tempBoard = removeMatchesAndDrop(tempBoard, bonusMatches);\n            bonusIndex++;\n            activateNextBonus();\n          });\n        }\n        activateNextBonus();\n      } else {\n        var res = findMatches(newBoard);\n        if (hasAnyMatches(res.matches)) {\n          setBoard(newBoard);\n          setMatches(res.matches);\n          setBonuses(res.bonuses);\n        } else {\n          setBoard(newBoard);\n          setMatches(null);\n          setBonuses([]);\n          setIsAnimating(false);\n        }\n      }\n    });\n  }, [matches]);\n  useEffect(function () {\n    if (levelCompleted && !gameOver) {\n      Animated.timing(overlayAnim, {\n        toValue: 1,\n        duration: 400,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(overlayAnim, {\n        toValue: 0,\n        duration: 400,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [levelCompleted, gameOver]);\n  useEffect(function () {\n    if (!matches) return;\n    var mission = MISSIONS[level % MISSIONS.length];\n    var collected = 0;\n    for (var row = 0; row < BOARD_SIZE; row++) {\n      for (var col = 0; col < BOARD_SIZE; col++) {\n        if (matches[row][col] && board[row][col] === mission.symbol) {\n          collected++;\n        }\n      }\n    }\n    if (collected > 0) setMissionProgress(function (p) {\n      return p + collected;\n    });\n  }, [matches]);\n  useEffect(function () {\n    setMissionProgress(0);\n  }, [level, gameOver]);\n  useEffect(function () {\n    var mission = MISSIONS[level % MISSIONS.length];\n    if (!levelCompleted && score >= targetScore && missionProgress >= mission.count) {\n      setLevelCompleted(true);\n    }\n  }, [score, targetScore, missionProgress, levelCompleted, level]);\n  useEffect(function () {\n    var stopHintTimer = function stopHintTimer() {\n      if (hintTimer.current) clearTimeout(hintTimer.current);\n      setHint(null);\n    };\n    if (!isAnimating && !gameOver && !levelCompleted) {\n      hintTimer.current = setTimeout(function () {\n        var move = findPossibleMove(board);\n        if (move) {\n          setHint(move);\n          setNoMovesAvailable(false);\n        } else {\n          setNoMovesAvailable(true);\n          setHint(null);\n        }\n      }, 3000);\n    } else {\n      stopHintTimer();\n      setNoMovesAvailable(false);\n    }\n    return stopHintTimer;\n  }, [isAnimating, gameOver, levelCompleted, board]);\n  useEffect(function () {\n    if (hint) {\n      hintAnimation.current = Animated.loop(Animated.sequence([Animated.timing(hintAnim, {\n        toValue: 1.2,\n        duration: 400,\n        useNativeDriver: true\n      }), Animated.timing(hintAnim, {\n        toValue: 1,\n        duration: 400,\n        useNativeDriver: true\n      })]));\n      hintAnimation.current.start();\n    } else {\n      if (hintAnimation.current) {\n        hintAnimation.current.stop();\n      }\n      hintAnim.setValue(1);\n    }\n  }, [hint]);\n  useEffect(function () {\n    if (levelCompleted && !showWallet) {\n      var mission = MISSIONS[level % MISSIONS.length];\n      var earned = {};\n      if (GAME_MODES[gameMode].hasMissions) {\n        earned[mission.symbol] = mission.count;\n        setWallet(function (w) {\n          return _objectSpread(_objectSpread({}, w), {}, _defineProperty({}, mission.symbol, _objectSpread(_objectSpread({}, w[mission.symbol]), {}, {\n            amount: w[mission.symbol].amount + mission.count\n          })));\n        });\n      }\n      var totalEarned = Math.floor(score / 100);\n      if (totalEarned > 0) {\n        var randomToken = availableTokens[Math.floor(Math.random() * availableTokens.length)];\n        earned[randomToken] = (earned[randomToken] || 0) + totalEarned;\n        setWallet(function (w) {\n          return _objectSpread(_objectSpread({}, w), {}, _defineProperty({}, randomToken, _objectSpread(_objectSpread({}, w[randomToken]), {}, {\n            amount: w[randomToken].amount + totalEarned\n          })));\n        });\n      }\n      setEarnedCoins(earned);\n      updateMarketPrices();\n      setTimeout(function () {\n        return setShowWallet(true);\n      }, 800);\n    }\n  }, [levelCompleted]);\n  useEffect(function () {\n    setShowWallet(false);\n  }, [level]);\n  useEffect(function () {\n    if (availableTokens.length > 0) {\n      setBoard(generateBoard());\n    }\n  }, [availableTokens]);\n  var handleNextLevel = function handleNextLevel() {\n    setShowWallet(false);\n    setLevelCompleted(false);\n    setEarnedCoins({});\n    setNoMovesAvailable(false);\n    var nextLevel = level + 1;\n    if (gameMode === 'classic') {\n      setTargetScore(function (t) {\n        return t + 200;\n      });\n    } else if (gameMode === 'campaign') {\n      if (nextLevel < LEVELS.length) {\n        setTargetScore(LEVELS[nextLevel].target);\n      } else {\n        setGameOver(true);\n        setScreen('main');\n        return;\n      }\n    }\n    setLevel(nextLevel);\n    setTimer(LEVELS[nextLevel].time + 5 * nextLevel);\n    setScore(0);\n    setBoard(generateBoard());\n    setSelected(null);\n    setMatches(null);\n    setBonuses([]);\n    setGameOver(false);\n    setLives(INITIAL_LIVES);\n    setMissionProgress(0);\n    setScreen('game');\n  };\n  var handleCellPress = function handleCellPress(row, col) {\n    if (isAnimating || gameOver || levelCompleted) return;\n    var mode = GAME_MODES[gameMode];\n    if (mode.moveLimit && movesLeft <= 0) return;\n    if (!selected) {\n      setSelected([row, col]);\n      return;\n    }\n    var _selected = _slicedToArray(selected, 2),\n      selRow = _selected[0],\n      selCol = _selected[1];\n    if (selRow === row && selCol === col) {\n      setSelected(null);\n      return;\n    }\n    if (!areAdjacent([selRow, selCol], [row, col])) {\n      setSelected([row, col]);\n      return;\n    }\n    var newBoard = cloneBoard(board);\n    var _ref9 = [newBoard[row][col], newBoard[selRow][selCol]];\n    newBoard[selRow][selCol] = _ref9[0];\n    newBoard[row][col] = _ref9[1];\n    var _findMatches3 = findMatches(newBoard),\n      foundMatches = _findMatches3.matches,\n      foundBonuses = _findMatches3.bonuses,\n      foundGroups = _findMatches3.matchGroups;\n    if (hasAnyMatches(foundMatches)) {\n      setHint(null);\n      setNoMovesAvailable(false);\n      setBoard(newBoard);\n      setMatches(foundMatches);\n      setBonuses(foundBonuses);\n      if (mode.moveLimit) {\n        setMovesLeft(function (prev) {\n          return prev - 1;\n        });\n      }\n      if (mode.timeBonus && foundMatches) {\n        var matchCount = foundMatches.flat().filter(Boolean).length;\n        if (matchCount >= 3) {\n          setTimeBonus(function (prev) {\n            return prev + 2;\n          });\n          setTimer(function (prev) {\n            return prev + 2;\n          });\n        }\n      }\n    } else {\n      setBoard(cloneBoard(board));\n    }\n    setSelected(null);\n  };\n  var handleRestart = function handleRestart() {\n    var mode = GAME_MODES[gameMode];\n    setLevel(0);\n    setScore(0);\n    setBoard(generateBoard());\n    setSelected(null);\n    setMatches(null);\n    setBonuses([]);\n    setGameOver(false);\n    setLevelCompleted(false);\n    setMissionProgress(0);\n    setMovesLeft(mode.moveLimit || 20);\n    setTimeBonus(0);\n    setEarnedCoins({});\n    setShowWallet(false);\n    setNoMovesAvailable(false);\n    setHint(null);\n    if (mode.hasTimer) {\n      setTimer(mode.timeLimit || LEVELS[0].time);\n    } else {\n      setTimer(999999);\n    }\n    if (mode.hasLevels) {\n      setTargetScore(LEVELS[0].target);\n    } else {\n      setTargetScore(mode.timeLimit ? 99999 : 1000);\n    }\n    setLives(mode.lives);\n    setAvailableTokens(mode.startingTokens);\n    setScreen('game');\n  };\n  var buyCoin = function buyCoin(coinSymbol) {\n    var coin = COIN_SHOP.find(function (c) {\n      return c.symbol === coinSymbol;\n    });\n    if (!coin || coin.owned) return;\n    var totalMoney = ALL_TOKENS.reduce(function (sum, t) {\n      return sum + wallet[t].amount * tokenPrices[t].price;\n    }, 0);\n    if (totalMoney >= coin.price) {\n      var remainingCost = coin.price;\n      var newWallet = _objectSpread({}, wallet);\n      var sortedTokens = ALL_TOKENS.sort(function (a, b) {\n        return tokenPrices[a].price - tokenPrices[b].price;\n      });\n      for (var token of sortedTokens) {\n        if (remainingCost <= 0) break;\n        var tokenValue = newWallet[token].amount * tokenPrices[token].price;\n        if (tokenValue > 0) {\n          if (tokenValue >= remainingCost) {\n            var tokensToSell = Math.ceil(remainingCost / tokenPrices[token].price);\n            newWallet[token] = _objectSpread(_objectSpread({}, newWallet[token]), {}, {\n              amount: Math.max(0, newWallet[token].amount - tokensToSell)\n            });\n            remainingCost = 0;\n          } else {\n            remainingCost -= tokenValue;\n            newWallet[token] = _objectSpread(_objectSpread({}, newWallet[token]), {}, {\n              amount: 0\n            });\n          }\n        }\n      }\n      if (remainingCost <= 0) {\n        setWallet(newWallet);\n        setAvailableTokens(function (prev) {\n          return [].concat(_toConsumableArray(prev), [coinSymbol]);\n        });\n        updateMarketPrices();\n        setBoard(generateBoard());\n      }\n    }\n  };\n  var renderWalletScreen = function renderWalletScreen() {\n    return _jsxs(View, {\n      style: styles.walletOverlay,\n      children: [_jsx(Text, {\n        style: styles.walletTitle,\n        children: \"\\u0422\\u0432\\u0456\\u0439 \\u043A\\u0440\\u0438\\u043F\\u0442\\u043E-\\u0433\\u0430\\u043C\\u0430\\u043D\\u0435\\u0446\\u044C\"\n      }), ALL_TOKENS.map(function (token) {\n        var price = tokenPrices[token].price;\n        var prev = tokenPrices[token].prevPrice;\n        var trend = '';\n        if (prev !== null) {\n          if (price > prev) trend = '↑';else if (price < prev) trend = '↓';else trend = '→';\n        }\n        return _jsxs(View, {\n          style: styles.walletRow,\n          children: [_jsx(Text, {\n            style: styles.walletToken,\n            children: token\n          }), _jsxs(Text, {\n            style: styles.walletAmount,\n            children: [wallet[token].amount, \" \\u0448\\u0442.\"]\n          }), _jsxs(Text, {\n            style: styles.walletPrice,\n            children: [\"$\", price, \" \", trend]\n          })]\n        }, token);\n      }), _jsxs(Text, {\n        style: styles.walletTotal,\n        children: [\"\\u0412\\u0430\\u0440\\u0442\\u0456\\u0441\\u0442\\u044C \\u043F\\u043E\\u0440\\u0442\\u0444\\u0435\\u043B\\u044F: $\", ALL_TOKENS.reduce(function (sum, t) {\n          return sum + wallet[t].amount * tokenPrices[t].price;\n        }, 0).toFixed(2)]\n      }), _jsx(Button, {\n        title: \"\\u041D\\u0430\\u0437\\u0430\\u0434\",\n        onPress: function onPress() {\n          return setScreen('main');\n        }\n      })]\n    });\n  };\n  var renderGameModeScreen = function renderGameModeScreen() {\n    return _jsxs(View, {\n      style: styles.menuContainer,\n      children: [_jsx(Text, {\n        style: styles.menuTitle,\n        children: \"\\u041E\\u0431\\u0435\\u0440\\u0438 \\u0440\\u0435\\u0436\\u0438\\u043C\"\n      }), Object.entries(GAME_MODES).map(function (_ref0) {\n        var _ref1 = _slicedToArray(_ref0, 2),\n          key = _ref1[0],\n          mode = _ref1[1];\n        return _jsxs(TouchableOpacity, {\n          style: styles.menuButton,\n          onPress: function onPress() {\n            setGameMode(key);\n            handleRestart();\n          },\n          children: [_jsx(Text, {\n            style: styles.menuButtonText,\n            children: mode.name\n          }), _jsx(Text, {\n            style: styles.menuButtonDesc,\n            children: mode.description\n          })]\n        }, key);\n      }), _jsx(Button, {\n        title: \"\\u041D\\u0430\\u0437\\u0430\\u0434\",\n        onPress: function onPress() {\n          return setScreen('main');\n        }\n      })]\n    });\n  };\n  var renderMainMenu = function renderMainMenu() {\n    return _jsxs(View, {\n      style: styles.menuContainer,\n      children: [_jsx(Text, {\n        style: styles.menuTitle,\n        children: \"Crypto Match\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.menuButton,\n        onPress: function onPress() {\n          return setScreen('gameMode');\n        },\n        children: _jsx(Text, {\n          style: styles.menuButtonText,\n          children: \"\\u0413\\u0440\\u0430\\u0442\\u0438\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.menuButton,\n        onPress: function onPress() {\n          return setScreen('wallet');\n        },\n        children: _jsx(Text, {\n          style: styles.menuButtonText,\n          children: \"\\u0413\\u0430\\u043C\\u0430\\u043D\\u0435\\u0446\\u044C\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.menuButton,\n        onPress: function onPress() {\n          return setScreen('shop');\n        },\n        children: _jsx(Text, {\n          style: styles.menuButtonText,\n          children: \"\\u041C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D \\u043C\\u043E\\u043D\\u0435\\u0442\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.menuButton,\n        onPress: function onPress() {\n          return setScreen('upgrades');\n        },\n        children: _jsx(Text, {\n          style: styles.menuButtonText,\n          children: \"\\u041F\\u043E\\u043A\\u0440\\u0430\\u0449\\u0435\\u043D\\u043D\\u044F\"\n        })\n      })]\n    });\n  };\n  var renderShopScreen = function renderShopScreen() {\n    var totalMoney = ALL_TOKENS.reduce(function (sum, t) {\n      return sum + wallet[t].amount * tokenPrices[t].price;\n    }, 0);\n    return _jsxs(View, {\n      style: styles.shopOverlay,\n      children: [_jsx(Text, {\n        style: styles.shopTitle,\n        children: \"\\u041C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D \\u043C\\u043E\\u043D\\u0435\\u0442\"\n      }), _jsxs(Text, {\n        style: styles.shopBalance,\n        children: [\"\\u0411\\u0430\\u043B\\u0430\\u043D\\u0441: $\", totalMoney.toFixed(2)]\n      }), _jsx(View, {\n        style: styles.shopGrid,\n        children: COIN_SHOP.map(function (coin) {\n          var isOwned = availableTokens.includes(coin.symbol);\n          var canAfford = totalMoney >= coin.price;\n          return _jsxs(View, {\n            style: [styles.shopItem, isOwned && styles.ownedItem],\n            children: [_jsx(Text, {\n              style: styles.shopCoinSymbol,\n              children: coin.symbol\n            }), _jsx(Text, {\n              style: styles.shopCoinName,\n              children: coin.name\n            }), _jsx(Text, {\n              style: styles.shopCoinDesc,\n              children: coin.description\n            }), isOwned ? _jsx(Text, {\n              style: styles.ownedText,\n              children: \"\\u0412\\u043B\\u0430\\u0441\\u043D\\u0456\\u0441\\u0442\\u044C\"\n            }) : _jsxs(_Fragment, {\n              children: [_jsxs(Text, {\n                style: styles.shopCoinPrice,\n                children: [\"$\", coin.price]\n              }), _jsx(TouchableOpacity, {\n                style: [styles.buyButton, !canAfford && styles.disabledButton],\n                onPress: function onPress() {\n                  return buyCoin(coin.symbol);\n                },\n                disabled: !canAfford,\n                children: _jsx(Text, {\n                  style: styles.buyButtonText,\n                  children: canAfford ? 'Купити' : 'Недостатньо коштів'\n                })\n              })]\n            })]\n          }, coin.symbol);\n        })\n      }), _jsx(Button, {\n        title: \"\\u041D\\u0430\\u0437\\u0430\\u0434\",\n        onPress: function onPress() {\n          return setScreen('main');\n        }\n      })]\n    });\n  };\n  var renderUpgradesScreen = function renderUpgradesScreen() {\n    return _jsxs(View, {\n      style: styles.walletOverlay,\n      children: [_jsx(Text, {\n        style: styles.walletTitle,\n        children: \"\\u041F\\u043E\\u043A\\u0440\\u0430\\u0449\\u0435\\u043D\\u043D\\u044F (\\u0441\\u043A\\u043E\\u0440\\u043E)\"\n      }), _jsx(Button, {\n        title: \"\\u041D\\u0430\\u0437\\u0430\\u0434\",\n        onPress: function onPress() {\n          return setScreen('main');\n        }\n      })]\n    });\n  };\n  var shuffleBoard = function shuffleBoard() {\n    if (isAnimating || gameOver || levelCompleted) return;\n    var allCoins = [];\n    for (var row = 0; row < BOARD_SIZE; row++) {\n      for (var col = 0; col < BOARD_SIZE; col++) {\n        if (board[row][col]) {\n          allCoins.push(board[row][col]);\n        }\n      }\n    }\n    for (var i = allCoins.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var _ref10 = [allCoins[j], allCoins[i]];\n      allCoins[i] = _ref10[0];\n      allCoins[j] = _ref10[1];\n    }\n    var newBoard = Array.from({\n      length: BOARD_SIZE\n    }, function () {\n      return Array(BOARD_SIZE).fill(null);\n    });\n    var coinIndex = 0;\n    for (var _row12 = 0; _row12 < BOARD_SIZE; _row12++) {\n      for (var _col11 = 0; _col11 < BOARD_SIZE; _col11++) {\n        if (coinIndex < allCoins.length) {\n          newBoard[_row12][_col11] = allCoins[coinIndex];\n          coinIndex++;\n        } else {\n          newBoard[_row12][_col11] = getRandomEmoji();\n        }\n      }\n    }\n    setBoard(newBoard);\n    setNoMovesAvailable(false);\n    setHint(null);\n  };\n  var returnToMainMenu = function returnToMainMenu() {\n    setGameOver(false);\n    setLevelCompleted(false);\n    setShowWallet(false);\n    setEarnedCoins({});\n    setNoMovesAvailable(false);\n    setHint(null);\n    setSelected(null);\n    setMatches(null);\n    setBonuses([]);\n    setScore(0);\n    setLevel(0);\n    setMissionProgress(0);\n    setMovesLeft(20);\n    setTimeBonus(0);\n    setScreen('main');\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [screen === 'main' && renderMainMenu(), screen === 'gameMode' && renderGameModeScreen(), screen === 'wallet' && renderWalletScreen(), screen === 'shop' && renderShopScreen(), screen === 'upgrades' && renderUpgradesScreen(), screen === 'game' && _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Crypto Match\"\n      }), _jsx(Text, {\n        style: styles.level,\n        children: GAME_MODES[gameMode].hasLevels ? `Ринок: ${level + 1}` : GAME_MODES[gameMode].name\n      }), _jsxs(Text, {\n        style: styles.lives,\n        children: [\"\\u0413\\u0430\\u043C\\u0430\\u043D\\u0446\\u0456: \", '👜'.repeat(lives) + '⬜️'.repeat(Math.max(0, 10 - lives))]\n      }), _jsxs(Text, {\n        style: styles.score,\n        children: [\"\\u0411\\u0430\\u043B\\u0430\\u043D\\u0441: \", score, \" / \", targetScore]\n      }), GAME_MODES[gameMode].hasTimer && _jsxs(Text, {\n        style: styles.timer,\n        children: [\"\\u0427\\u0430\\u0441: \", timer, \" \\u0441\\u0435\\u043A \", timeBonus > 0 && `(+${timeBonus})`]\n      }), GAME_MODES[gameMode].moveLimit && _jsxs(Text, {\n        style: styles.moves,\n        children: [\"\\u0425\\u043E\\u0434\\u0438: \", movesLeft]\n      }), GAME_MODES[gameMode].hasMissions && _jsxs(Text, {\n        style: styles.mission,\n        children: [\"\\u041C\\u0456\\u0441\\u0456\\u044F: \\u0417\\u0431\\u0435\\u0440\\u0438 \", MISSIONS[level % MISSIONS.length].count, \" \", MISSIONS[level % MISSIONS.length].name, \" \", MISSIONS[level % MISSIONS.length].symbol, \" \\u2014 \", missionProgress, \" / \", MISSIONS[level % MISSIONS.length].count]\n      }), _jsx(View, {\n        style: styles.board,\n        children: board.map(function (row, rowIndex) {\n          return _jsx(View, {\n            style: styles.row,\n            children: row.map(function (cell, colIndex) {\n              var isSelected = selected && selected[0] === rowIndex && selected[1] === colIndex;\n              var isHinted = hint && (hint[0][0] === rowIndex && hint[0][1] === colIndex || hint[1][0] === rowIndex && hint[1][1] === colIndex);\n              return _jsx(TouchableOpacity, {\n                style: [styles.cell, isSelected && styles.selectedCell],\n                activeOpacity: 0.7,\n                onPress: function onPress() {\n                  return handleCellPress(rowIndex, colIndex);\n                },\n                disabled: isAnimating || gameOver || levelCompleted || GAME_MODES[gameMode].moveLimit && movesLeft <= 0,\n                children: _jsx(Animated.View, {\n                  style: {\n                    opacity: opacityAnim[rowIndex][colIndex],\n                    transform: [{\n                      scale: isHinted ? hintAnim : 1\n                    }]\n                  },\n                  children: _jsx(Text, {\n                    style: styles.emoji,\n                    children: cell\n                  })\n                })\n              }, colIndex);\n            })\n          }, rowIndex);\n        })\n      }), _jsx(Text, {\n        style: styles.info,\n        children: GAME_MODES[gameMode].timeBonus ? 'Швидкі матчі дають бонус часу!' : 'Збирай криптомонети! 4 в ряд — 🚀 Pump, 5 в ряд — 💥 Crypto Bomb, L/T — 💣 Exchange Crash!'\n      }), noMovesAvailable && !isAnimating && !gameOver && !levelCompleted && _jsxs(View, {\n        style: styles.shuffleContainer,\n        children: [_jsx(Text, {\n          style: styles.noMovesText,\n          children: \"\\u041D\\u0435\\u043C\\u0430\\u0454 \\u043C\\u043E\\u0436\\u043B\\u0438\\u0432\\u0438\\u0445 \\u0445\\u043E\\u0434\\u0456\\u0432!\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.shuffleButton,\n          onPress: shuffleBoard,\n          children: _jsx(Text, {\n            style: styles.shuffleButtonText,\n            children: \"\\uD83D\\uDD04 \\u041F\\u0435\\u0440\\u0435\\u043C\\u0456\\u0448\\u0430\\u0442\\u0438\"\n          })\n        })]\n      }), gameOver && _jsxs(View, {\n        style: styles.overlay,\n        children: [_jsx(Text, {\n          style: styles.gameOverText,\n          children: levelCompleted ? 'Рівень пройдено!' : 'Гру завершено!'\n        }), _jsxs(View, {\n          style: styles.gameOverButtons,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.gameOverButton,\n            onPress: handleRestart,\n            children: _jsx(Text, {\n              style: styles.gameOverButtonText,\n              children: \"\\u041F\\u043E\\u0447\\u0430\\u0442\\u0438 \\u0441\\u043F\\u043E\\u0447\\u0430\\u0442\\u043A\\u0443\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.gameOverButton,\n            onPress: returnToMainMenu,\n            children: _jsx(Text, {\n              style: styles.gameOverButtonText,\n              children: \"\\u0413\\u043E\\u043B\\u043E\\u0432\\u043D\\u0435 \\u043C\\u0435\\u043D\\u044E\"\n            })\n          })]\n        })]\n      }), showWallet && renderWallet(), levelCompleted && !gameOver && !showWallet && _jsx(Animated.View, {\n        style: [styles.overlay, {\n          opacity: overlayAnim\n        }],\n        children: _jsx(Text, {\n          style: styles.gameOverText,\n          children: \"\\u0420\\u0456\\u0432\\u0435\\u043D\\u044C \\u043F\\u0440\\u043E\\u0439\\u0434\\u0435\\u043D\\u043E! \\u041D\\u0430\\u0441\\u0442\\u0443\\u043F\\u043D\\u0438\\u0439 \\u0441\\u0442\\u0430\\u0440\\u0442\\u0443\\u0454...\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#222',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: '#fff',\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  level: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  lives: {\n    color: '#fff',\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  score: {\n    color: '#fff',\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  timer: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12\n  },\n  board: {\n    backgroundColor: '#333',\n    padding: 8,\n    borderRadius: 16\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  cell: {\n    width: 48,\n    height: 48,\n    margin: 4,\n    backgroundColor: '#444',\n    borderRadius: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderColor: 'transparent'\n  },\n  selectedCell: {\n    borderColor: '#fff'\n  },\n  emoji: {\n    fontSize: 32\n  },\n  info: {\n    color: '#aaa',\n    marginTop: 24,\n    fontSize: 16\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  gameOverText: {\n    color: '#fff',\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 24,\n    textAlign: 'center'\n  },\n  mission: {\n    color: '#ffd700',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    textAlign: 'center'\n  },\n  walletOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(20,20,30,0.98)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 10\n  },\n  walletTitle: {\n    color: '#ffd700',\n    fontSize: 26,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  walletRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  walletToken: {\n    fontSize: 28,\n    width: 40,\n    textAlign: 'center'\n  },\n  walletAmount: {\n    color: '#fff',\n    fontSize: 20,\n    width: 80,\n    textAlign: 'center'\n  },\n  walletPrice: {\n    color: '#0f0',\n    fontSize: 18,\n    width: 100,\n    textAlign: 'center'\n  },\n  walletTotal: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginVertical: 16\n  },\n  walletButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n    marginTop: 24\n  },\n  menuContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#222'\n  },\n  menuTitle: {\n    color: '#ffd700',\n    fontSize: 36,\n    fontWeight: 'bold',\n    marginBottom: 48\n  },\n  menuButton: {\n    backgroundColor: '#333',\n    paddingVertical: 18,\n    paddingHorizontal: 48,\n    borderRadius: 16,\n    marginBottom: 24,\n    width: 220,\n    alignItems: 'center'\n  },\n  menuButtonText: {\n    color: '#fff',\n    fontSize: 24,\n    fontWeight: 'bold',\n    letterSpacing: 1\n  },\n  menuButtonDesc: {\n    color: '#aaa',\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  shopOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(20,20,30,0.98)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 10\n  },\n  shopTitle: {\n    color: '#ffd700',\n    fontSize: 26,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  shopBalance: {\n    color: '#0f0',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 24\n  },\n  shopGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    maxWidth: 400,\n    marginBottom: 24\n  },\n  shopItem: {\n    backgroundColor: '#333',\n    padding: 16,\n    margin: 8,\n    borderRadius: 12,\n    alignItems: 'center',\n    width: 120,\n    borderWidth: 2,\n    borderColor: '#555'\n  },\n  ownedItem: {\n    borderColor: '#ffd700',\n    backgroundColor: '#2a2a1a'\n  },\n  shopCoinSymbol: {\n    fontSize: 32,\n    marginBottom: 8\n  },\n  shopCoinName: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4,\n    textAlign: 'center'\n  },\n  shopCoinDesc: {\n    color: '#aaa',\n    fontSize: 12,\n    textAlign: 'center',\n    marginBottom: 8\n  },\n  shopCoinPrice: {\n    color: '#0f0',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  buyButton: {\n    backgroundColor: '#4CAF50',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 8\n  },\n  disabledButton: {\n    backgroundColor: '#666'\n  },\n  buyButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  ownedText: {\n    color: '#ffd700',\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  moves: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  earnedCoinsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginBottom: 16\n  },\n  earnedCoinItem: {\n    backgroundColor: '#333',\n    padding: 8,\n    margin: 4,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  earnedCoinSymbol: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  earnedCoinAmount: {\n    color: '#0f0',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  earnedCoinValue: {\n    color: '#0f0',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  earnedTotal: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 16\n  },\n  noEarnings: {\n    color: '#aaa',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  nextLevelButton: {\n    backgroundColor: '#4CAF50',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8\n  },\n  nextLevelButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  mainMenuButton: {\n    backgroundColor: '#4CAF50',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8\n  },\n  mainMenuButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  shuffleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 16\n  },\n  noMovesText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginRight: 8\n  },\n  shuffleButton: {\n    backgroundColor: '#4CAF50',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 8\n  },\n  shuffleButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  gameOverButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n    marginTop: 24\n  },\n  gameOverButton: {\n    backgroundColor: '#4CAF50',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8\n  },\n  gameOverButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","View","StyleSheet","SafeAreaView","Text","TouchableOpacity","Animated","Button","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BOARD_SIZE","EMOJIS","BONUS","SUPER_BONUS","CROSS_BONUS","ANIMATION_DURATION","LEVELS","time","target","INITIAL_LIVES","MISSIONS","symbol","name","count","ALL_TOKENS","INITIAL_AVAILABLE_TOKENS","COIN_SHOP","price","description","owned","GAME_MODES","campaign","lives","hasMissions","hasTimer","hasLevels","startingTokens","shopAvailable","classic","challenge","timeLimit","speedrun","timeBonus","puzzle","moveLimit","App","_useState","_useState2","_slicedToArray","availableTokens","setAvailableTokens","_useState3","_useState4","showShop","setShowShop","getRandomEmoji","Math","floor","random","length","generateBoard","Array","from","_useState5","_useState6","board","setBoard","_useState7","_useState8","selected","setSelected","_useState9","_useState0","matches","setMatches","_useState1","_useState10","bonuses","setBonuses","_useState11","_useState12","isAnimating","setIsAnimating","_useState13","_useState14","score","setScore","_useState15","_useState16","level","setLevel","_useState17","_useState18","timer","setTimer","_useState19","_useState20","targetScore","setTargetScore","_useState21","_useState22","gameOver","setGameOver","_useState23","_useState24","levelCompleted","setLevelCompleted","_useState25","_useState26","setLives","opacityAnim","Value","current","overlayAnim","_useState27","_useState28","missionProgress","setMissionProgress","_useState29","_useState30","hint","setHint","hintAnim","hintTimer","hintAnimation","_useState31","getInitialWallet","_useState32","wallet","setWallet","_useState33","_useState34","showWallet","setShowWallet","_useState35","getInitialTokenPrices","_useState36","tokenPrices","setTokenPrices","_useState37","_useState38","screen","setScreen","_useState39","_useState40","gameMode","setGameMode","_useState41","_useState42","movesLeft","setMovesLeft","_useState43","_useState44","setTimeBonus","_useState45","_useState46","earnedCoins","setEarnedCoins","_useState47","_useState48","noMovesAvailable","setNoMovesAvailable","cloneBoard","map","row","_toConsumableArray","areAdjacent","_ref","_ref2","_ref3","r1","c1","_ref4","r2","c2","abs","findMatches","fill","matchGroups","bonusTypes","col","group","k","push","type","cells","value","bonusCol","bonusType","color","bonusRow","_loop","_row2","_loop2","_col2","inRow","inCol","some","_ref5","_ref6","r","c","removeMatchesAndDrop","bonusesToPlace","arguments","undefined","newBoard","bonus","pointer","hasAnyMatches","activateBonus","colorForSuper","getBonusMatches","findPossibleMove","_ref7","_ref8","getRandomPrice","toFixed","obj","forEach","t","amount","prevPrice","updateMarketPrices","prices","_prices$t$price","_prices$t","mode","l","interval","setInterval","clearInterval","mission","b","_findMatches","m","bs","mg","_loop3","points","s","res","animations","timing","toValue","duration","useNativeDriver","parallel","start","_findMatches2","setValue","tempBoard","bonusMatches","bonusIndex","activateNextBonus","collectedFromBonus","p","bonusPoints","bonusAnims","collected","stopHintTimer","clearTimeout","setTimeout","move","loop","sequence","stop","earned","w","_objectSpread","_defineProperty","totalEarned","randomToken","handleNextLevel","nextLevel","handleCellPress","_selected","selRow","selCol","_ref9","_findMatches3","foundMatches","foundBonuses","foundGroups","prev","matchCount","flat","filter","Boolean","handleRestart","buyCoin","coinSymbol","coin","find","totalMoney","reduce","sum","remainingCost","newWallet","sortedTokens","sort","a","token","tokenValue","tokensToSell","ceil","max","concat","renderWalletScreen","style","styles","walletOverlay","children","walletTitle","trend","walletRow","walletToken","walletAmount","walletPrice","walletTotal","title","onPress","renderGameModeScreen","menuContainer","menuTitle","Object","entries","_ref0","_ref1","key","menuButton","menuButtonText","menuButtonDesc","renderMainMenu","renderShopScreen","shopOverlay","shopTitle","shopBalance","shopGrid","isOwned","includes","canAfford","shopItem","ownedItem","shopCoinSymbol","shopCoinName","shopCoinDesc","ownedText","shopCoinPrice","buyButton","disabledButton","disabled","buyButtonText","renderUpgradesScreen","shuffleBoard","allCoins","i","j","_ref10","coinIndex","returnToMainMenu","container","repeat","moves","rowIndex","cell","colIndex","isSelected","isHinted","selectedCell","activeOpacity","opacity","transform","scale","emoji","info","shuffleContainer","noMovesText","shuffleButton","shuffleButtonText","overlay","gameOverText","gameOverButtons","gameOverButton","gameOverButtonText","renderWallet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","marginBottom","padding","borderRadius","flexDirection","width","height","margin","borderWidth","borderColor","marginTop","position","top","left","right","bottom","textAlign","zIndex","marginVertical","walletButtons","paddingVertical","paddingHorizontal","letterSpacing","flexWrap","maxWidth","earnedCoinsContainer","earnedCoinItem","earnedCoinSymbol","earnedCoinAmount","earnedCoinValue","earnedTotal","noEarnings","nextLevelButton","nextLevelButtonText","mainMenuButton","mainMenuButtonText","marginRight"],"sources":["C:/Users/User/Desktop/New folder/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { View, StyleSheet, SafeAreaView, Text, TouchableOpacity, Animated, Button } from 'react-native';\r\n\r\nconst BOARD_SIZE = 6;\r\nconst EMOJIS = ['₿', 'Ξ', '🪙', '🐕', '◎', '₳'];\r\nconst BONUS = '🚀';\r\nconst SUPER_BONUS = '💥';\r\nconst CROSS_BONUS = '💣';\r\nconst ANIMATION_DURATION = 350;\r\n\r\nconst LEVELS = [\r\n  { time: 60, target: 600 },\r\n  { time: 50, target: 900 },\r\n  { time: 40, target: 1300 },\r\n  { time: 35, target: 1800 },\r\n  { time: 30, target: 2500 },\r\n];\r\n\r\nconst INITIAL_LIVES = 3;\r\n\r\n// Додаю місії для кожного рівня\r\nconst MISSIONS = [\r\n  { symbol: '🪙', name: 'Coin', count: 8 },\r\n  { symbol: '🐕', name: 'Dogecoin', count: 10 },\r\n  { symbol: '◎', name: 'Solana', count: 12 },\r\n  { symbol: '⚡', name: 'Lightning', count: 9 },\r\n  { symbol: '🌙', name: 'Mooncoin', count: 11 },\r\n  { symbol: '🔥', name: 'Firecoin', count: 13 },\r\n  { symbol: '₿', name: 'Bitcoin', count: 15 },\r\n  { symbol: 'Ξ', name: 'Ethereum', count: 14 },\r\n  { symbol: '💎', name: 'Diamond', count: 16 },\r\n  { symbol: '🚀', name: 'Rocket', count: 17 },\r\n];\r\n\r\nconst ALL_TOKENS = ['₿', 'Ξ', '🪙', '🐕', '◎', '₳', '⚡', '🌙', '🔥', '💎', '🚀', '🎯', '⭐', '🌟', '💫', '🌍', '🌊', '🌪️', '🌈', '🎪'];\r\n\r\n// Початкові монети (більше варіацій для цікавої гри)\r\nconst INITIAL_AVAILABLE_TOKENS = ['🪙', '🐕', '◎', '⚡', '🌙', '🔥'];\r\n\r\n// Додаю систему магазину монет\r\nconst COIN_SHOP = [\r\n  { symbol: '₿', name: 'Bitcoin', price: 1500, description: 'Король криптовалют' },\r\n  { symbol: 'Ξ', name: 'Ethereum', price: 1200, description: 'Смарт-контракти' },\r\n  { symbol: '🪙', name: 'Coin', price: 0, description: 'Базова монета', owned: true },\r\n  { symbol: '🐕', name: 'Dogecoin', price: 0, description: 'Мем-монета', owned: true },\r\n  { symbol: '◎', name: 'Solana', price: 0, description: 'Швидкі транзакції', owned: true },\r\n  { symbol: '₳', name: 'Cardano', price: 1000, description: 'Науковий підхід' },\r\n  { symbol: '⚡', name: 'Lightning', price: 0, description: 'Швидкі платежі', owned: true },\r\n  { symbol: '🌙', name: 'Mooncoin', price: 0, description: 'До місяця!', owned: true },\r\n  { symbol: '🔥', name: 'Firecoin', price: 0, description: 'Гаряча монета', owned: true },\r\n  { symbol: '💎', name: 'Diamond', price: 2000, description: 'Дорогоцінний камінь' },\r\n  { symbol: '🚀', name: 'Rocket', price: 1800, description: 'До зірок!' },\r\n  { symbol: '🎯', name: 'Target', price: 1600, description: 'Точна ціль' },\r\n  { symbol: '⭐', name: 'Starcoin', price: 1400, description: 'Зіркова монета' },\r\n  { symbol: '🌟', name: 'Sparkle', price: 1300, description: 'Блискуча' },\r\n  { symbol: '💫', name: 'Shooting', price: 1700, description: 'Падаюча зірка' },\r\n  { symbol: '🌍', name: 'Earth', price: 1100, description: 'Планетарна' },\r\n  { symbol: '🌊', name: 'Wave', price: 900, description: 'Хвиляста' },\r\n  { symbol: '🌪️', name: 'Tornado', price: 1900, description: 'Буревій' },\r\n  { symbol: '🌈', name: 'Rainbow', price: 2200, description: 'Веселкова' },\r\n  { symbol: '🎪', name: 'Circus', price: 2500, description: 'Циркова' },\r\n];\r\n\r\n// Різні налаштування для режимів гри\r\nconst GAME_MODES = {\r\n  campaign: {\r\n    name: 'Кампанія',\r\n    description: 'Проходь рівні та виконуй місії',\r\n    lives: 3,\r\n    hasMissions: true,\r\n    hasTimer: true,\r\n    hasLevels: true,\r\n    startingTokens: ['🪙', '🐕', '◎', '⚡', '🌙', '🔥'],\r\n    shopAvailable: true,\r\n  },\r\n  classic: {\r\n    name: 'Класичний',\r\n    description: 'Безмежна гра без обмежень',\r\n    lives: 999,\r\n    hasMissions: false,\r\n    hasTimer: false,\r\n    hasLevels: false,\r\n    startingTokens: ['🪙', '🐕', '◎', '⚡', '🌙', '🔥', '💎', '🚀'],\r\n    shopAvailable: true,\r\n  },\r\n  challenge: {\r\n    name: 'Челендж',\r\n    description: '60 секунд на максимум очок!',\r\n    lives: 1,\r\n    hasMissions: false,\r\n    hasTimer: true,\r\n    hasLevels: false,\r\n    startingTokens: ['🪙', '🐕', '◎', '⚡', '🌙', '🔥', '💎', '🚀', '🎯', '⭐'],\r\n    shopAvailable: false,\r\n    timeLimit: 60,\r\n  },\r\n  speedrun: {\r\n    name: 'Спідран',\r\n    description: 'Швидкі матчі = більше часу!',\r\n    lives: 3,\r\n    hasMissions: false,\r\n    hasTimer: true,\r\n    hasLevels: false,\r\n    startingTokens: ['🪙', '🐕', '◎', '⚡', '🌙', '🔥'],\r\n    shopAvailable: false,\r\n    timeLimit: 30,\r\n    timeBonus: true,\r\n  },\r\n  puzzle: {\r\n    name: 'Пазл',\r\n    description: 'Обмежена кількість ходів',\r\n    lives: 3,\r\n    hasMissions: false,\r\n    hasTimer: false,\r\n    hasLevels: false,\r\n    startingTokens: ['🪙', '🐕', '◎', '⚡', '🌙', '🔥'],\r\n    shopAvailable: false,\r\n    moveLimit: 20,\r\n  },\r\n};\r\n\r\nexport default function App() {\r\n  const [availableTokens, setAvailableTokens] = useState(INITIAL_AVAILABLE_TOKENS); // Доступні монети для гри\r\n  const [showShop, setShowShop] = useState(false);\r\n\r\n  // Функція для отримання випадкової монети (тепер всередині компонента)\r\n  const getRandomEmoji = () => {\r\n    return availableTokens[Math.floor(Math.random() * availableTokens.length)];\r\n  };\r\n\r\n  // Функція генерації дошки (тепер всередині компонента)\r\n  const generateBoard = () => {\r\n    return Array.from({ length: BOARD_SIZE }, () =>\r\n      Array.from({ length: BOARD_SIZE }, getRandomEmoji)\r\n    );\r\n  };\r\n\r\n  // Початкова дошка з різними монетами\r\n  const [board, setBoard] = useState(() => \r\n    Array.from({ length: BOARD_SIZE }, () =>\r\n      Array.from({ length: BOARD_SIZE }, () => \r\n        INITIAL_AVAILABLE_TOKENS[Math.floor(Math.random() * INITIAL_AVAILABLE_TOKENS.length)]\r\n      )\r\n    )\r\n  );\r\n  const [selected, setSelected] = useState(null); // [row, col]\r\n  const [matches, setMatches] = useState(null); // матриця true/false для анімації\r\n  const [bonuses, setBonuses] = useState([]); // [{type, row, col}]\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n  const [timer, setTimer] = useState(LEVELS[0].time);\r\n  const [targetScore, setTargetScore] = useState(LEVELS[0].target);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [levelCompleted, setLevelCompleted] = useState(false);\r\n  const [lives, setLives] = useState(INITIAL_LIVES);\r\n  const opacityAnim = useRef(\r\n    Array.from({ length: BOARD_SIZE }, () =>\r\n      Array.from({ length: BOARD_SIZE }, () => new Animated.Value(1))\r\n    )\r\n  ).current;\r\n  const overlayAnim = useRef(new Animated.Value(0)).current;\r\n  const [missionProgress, setMissionProgress] = useState(0);\r\n  const [hint, setHint] = useState(null); // [[r1, c1], [r2, c2]]\r\n  const hintAnim = useRef(new Animated.Value(1)).current;\r\n  const hintTimer = useRef(null);\r\n  const hintAnimation = useRef(null);\r\n  const [wallet, setWallet] = useState(getInitialWallet);\r\n  const [showWallet, setShowWallet] = useState(false);\r\n  const [tokenPrices, setTokenPrices] = useState(getInitialTokenPrices);\r\n  const [screen, setScreen] = useState('main'); // main, gameMode, game, wallet, upgrades, shop\r\n  const [gameMode, setGameMode] = useState('campaign'); // campaign, classic, challenge, speedrun, puzzle\r\n  const [movesLeft, setMovesLeft] = useState(20); // Для режиму пазл\r\n  const [timeBonus, setTimeBonus] = useState(0); // Для режиму спідран\r\n  const [earnedCoins, setEarnedCoins] = useState({}); // Монети, зароблені за рівень\r\n  const [noMovesAvailable, setNoMovesAvailable] = useState(false); // Немає можливих ходів\r\n\r\n  function cloneBoard(board) {\r\n    return board.map(row => [...row]);\r\n  }\r\n\r\n  function areAdjacent([r1, c1], [r2, c2]) {\r\n    return (\r\n      (Math.abs(r1 - r2) === 1 && c1 === c2) ||\r\n      (Math.abs(c1 - c2) === 1 && r1 === r2)\r\n    );\r\n  }\r\n\r\n  // Пошук матчів і бонусів + підрахунок очок\r\n  function findMatches(board) {\r\n    const matches = Array.from({ length: BOARD_SIZE }, () => Array(BOARD_SIZE).fill(false));\r\n    const bonuses = [];\r\n    const matchGroups = [];\r\n    const bonusTypes = Array.from({ length: BOARD_SIZE }, () => Array(BOARD_SIZE).fill(null));\r\n\r\n    // Horizontal\r\n    for (let row = 0; row < BOARD_SIZE; row++) {\r\n      let count = 1;\r\n      for (let col = 1; col < BOARD_SIZE; col++) {\r\n        if (board[row][col] && board[row][col] === board[row][col - 1]) {\r\n          count++;\r\n        } else {\r\n          if (count >= 3) {\r\n            const group = [];\r\n            for (let k = 0; k < count; k++) {\r\n              matches[row][col - 1 - k] = true;\r\n              group.push([row, col - 1 - k]);\r\n            }\r\n            matchGroups.push({ type: 'row', count, cells: group, value: board[row][col - 1] });\r\n            if (count === 4) {\r\n              const bonusCol = col - 1 - Math.floor(Math.random() * count);\r\n              bonuses.push({ type: 'row', row, col: bonusCol, bonusType: BONUS });\r\n              bonusTypes[row][bonusCol] = BONUS;\r\n            }\r\n            if (count >= 5) {\r\n              const bonusCol = col - 1 - Math.floor(Math.random() * count);\r\n              bonuses.push({ type: 'row', row, col: bonusCol, bonusType: SUPER_BONUS, color: board[row][col - 1] });\r\n              bonusTypes[row][bonusCol] = SUPER_BONUS;\r\n            }\r\n          }\r\n          count = 1;\r\n        }\r\n      }\r\n      if (count >= 3) {\r\n        const group = [];\r\n        for (let k = 0; k < count; k++) {\r\n          matches[row][BOARD_SIZE - 1 - k] = true;\r\n          group.push([row, BOARD_SIZE - 1 - k]);\r\n        }\r\n        matchGroups.push({ type: 'row', count, cells: group, value: board[row][BOARD_SIZE - 1] });\r\n        if (count === 4) {\r\n          const bonusCol = BOARD_SIZE - 1 - Math.floor(Math.random() * count);\r\n          bonuses.push({ type: 'row', row, col: bonusCol, bonusType: BONUS });\r\n          bonusTypes[row][bonusCol] = BONUS;\r\n        }\r\n        if (count >= 5) {\r\n          const bonusCol = BOARD_SIZE - 1 - Math.floor(Math.random() * count);\r\n          bonuses.push({ type: 'row', row, col: bonusCol, bonusType: SUPER_BONUS, color: board[row][BOARD_SIZE - 1] });\r\n          bonusTypes[row][bonusCol] = SUPER_BONUS;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Vertical\r\n    for (let col = 0; col < BOARD_SIZE; col++) {\r\n      let count = 1;\r\n      for (let row = 1; row < BOARD_SIZE; row++) {\r\n        if (board[row][col] && board[row][col] === board[row - 1][col]) {\r\n          count++;\r\n        } else {\r\n          if (count >= 3) {\r\n            const group = [];\r\n            for (let k = 0; k < count; k++) {\r\n              matches[row - 1 - k][col] = true;\r\n              group.push([row - 1 - k, col]);\r\n            }\r\n            matchGroups.push({ type: 'col', count, cells: group, value: board[row - 1][col] });\r\n            if (count === 4) {\r\n              const bonusRow = row - 1 - Math.floor(Math.random() * count);\r\n              bonuses.push({ type: 'col', row: bonusRow, col, bonusType: BONUS });\r\n              bonusTypes[bonusRow][col] = BONUS;\r\n            }\r\n            if (count >= 5) {\r\n              const bonusRow = row - 1 - Math.floor(Math.random() * count);\r\n              bonuses.push({ type: 'col', row: bonusRow, col, bonusType: SUPER_BONUS, color: board[row - 1][col] });\r\n              bonusTypes[bonusRow][col] = SUPER_BONUS;\r\n            }\r\n          }\r\n          count = 1;\r\n        }\r\n      }\r\n      if (count >= 3) {\r\n        const group = [];\r\n        for (let k = 0; k < count; k++) {\r\n          matches[BOARD_SIZE - 1 - k][col] = true;\r\n          group.push([BOARD_SIZE - 1 - k, col]);\r\n        }\r\n        matchGroups.push({ type: 'col', count, cells: group, value: board[BOARD_SIZE - 1][col] });\r\n        if (count === 4) {\r\n          const bonusRow = BOARD_SIZE - 1 - Math.floor(Math.random() * count);\r\n          bonuses.push({ type: 'col', row: bonusRow, col, bonusType: BONUS });\r\n          bonusTypes[bonusRow][col] = BONUS;\r\n        }\r\n        if (count >= 5) {\r\n          const bonusRow = BOARD_SIZE - 1 - Math.floor(Math.random() * count);\r\n          bonuses.push({ type: 'col', row: bonusRow, col, bonusType: SUPER_BONUS, color: board[BOARD_SIZE - 1][col] });\r\n          bonusTypes[bonusRow][col] = SUPER_BONUS;\r\n        }\r\n      }\r\n    }\r\n\r\n    // L/T-образний матч (хрестова бомба)\r\n    // Перебираємо всі клітинки, шукаємо перетин двох матчів\r\n    for (let row = 0; row < BOARD_SIZE; row++) {\r\n      for (let col = 0; col < BOARD_SIZE; col++) {\r\n        if (matches[row][col]) {\r\n          // Перевіряємо чи ця клітинка входить і в горизонтальний, і у вертикальний матч\r\n          let inRow = false, inCol = false;\r\n          for (const group of matchGroups) {\r\n            if (group.cells.some(([r, c]) => r === row && c === col)) {\r\n              if (group.type === 'row' && group.count >= 3) inRow = true;\r\n              if (group.type === 'col' && group.count >= 3) inCol = true;\r\n            }\r\n          }\r\n          if (inRow && inCol) {\r\n            bonuses.push({ type: 'cross', row, col, bonusType: CROSS_BONUS });\r\n            bonusTypes[row][col] = CROSS_BONUS;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return { matches, bonuses, matchGroups, bonusTypes };\r\n  }\r\n\r\n  function removeMatchesAndDrop(board, matches, bonusesToPlace = []) {\r\n    let newBoard = cloneBoard(board);\r\n    // Remove matches\r\n    for (let row = 0; row < BOARD_SIZE; row++) {\r\n      for (let col = 0; col < BOARD_SIZE; col++) {\r\n        if (matches[row][col]) {\r\n          newBoard[row][col] = null;\r\n        }\r\n      }\r\n    }\r\n    // Place bonuses\r\n    for (const bonus of bonusesToPlace) {\r\n      if (newBoard[bonus.row][bonus.col] === null) {\r\n        newBoard[bonus.row][bonus.col] = bonus.bonusType;\r\n      }\r\n    }\r\n    // Drop\r\n    for (let col = 0; col < BOARD_SIZE; col++) {\r\n      let pointer = BOARD_SIZE - 1;\r\n      for (let row = BOARD_SIZE - 1; row >= 0; row--) {\r\n        if (newBoard[row][col]) {\r\n          newBoard[pointer][col] = newBoard[row][col];\r\n          if (pointer !== row) newBoard[row][col] = null;\r\n          pointer--;\r\n        }\r\n      }\r\n      // Fill empty\r\n      for (let row = pointer; row >= 0; row--) {\r\n        newBoard[row][col] = getRandomEmoji();\r\n      }\r\n    }\r\n    return newBoard;\r\n  }\r\n\r\n  function hasAnyMatches(matches) {\r\n    for (let row = 0; row < BOARD_SIZE; row++) {\r\n      for (let col = 0; col < BOARD_SIZE; col++) {\r\n        if (matches[row][col]) return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function activateBonus(board, bonus, colorForSuper) {\r\n    let newBoard = cloneBoard(board);\r\n    if (bonus.bonusType === BONUS) {\r\n      // Стандартний бонус: зносить ряд або стовпець\r\n      if (bonus.type === 'row') {\r\n        for (let col = 0; col < BOARD_SIZE; col++) {\r\n          newBoard[bonus.row][col] = null;\r\n        }\r\n      } else if (bonus.type === 'col') {\r\n        for (let row = 0; row < BOARD_SIZE; row++) {\r\n          newBoard[row][bonus.col] = null;\r\n        }\r\n      }\r\n    } else if (bonus.bonusType === SUPER_BONUS) {\r\n      // Супербомба: зносить всі фішки такого ж кольору\r\n      for (let row = 0; row < BOARD_SIZE; row++) {\r\n        for (let col = 0; col < BOARD_SIZE; col++) {\r\n          if (board[row][col] === colorForSuper) {\r\n            newBoard[row][col] = null;\r\n          }\r\n        }\r\n      }\r\n    } else if (bonus.bonusType === CROSS_BONUS) {\r\n      // Хрестова бомба: зносить ряд і стовпець\r\n      for (let col = 0; col < BOARD_SIZE; col++) {\r\n        newBoard[bonus.row][col] = null;\r\n      }\r\n      for (let row = 0; row < BOARD_SIZE; row++) {\r\n        newBoard[row][bonus.col] = null;\r\n      }\r\n    }\r\n    return newBoard;\r\n  }\r\n\r\n  function getBonusMatches(board, bonus, colorForSuper) {\r\n    const matches = Array.from({ length: BOARD_SIZE }, () => Array(BOARD_SIZE).fill(false));\r\n    if (bonus.bonusType === BONUS) {\r\n      if (bonus.type === 'row') {\r\n        for (let col = 0; col < BOARD_SIZE; col++) {\r\n          matches[bonus.row][col] = true;\r\n        }\r\n      } else if (bonus.type === 'col') {\r\n        for (let row = 0; row < BOARD_SIZE; row++) {\r\n          matches[row][bonus.col] = true;\r\n        }\r\n      }\r\n    } else if (bonus.bonusType === SUPER_BONUS) {\r\n      for (let row = 0; row < BOARD_SIZE; row++) {\r\n        for (let col = 0; col < BOARD_SIZE; col++) {\r\n          if (board[row][col] === colorForSuper) {\r\n            matches[row][col] = true;\r\n          }\r\n        }\r\n      }\r\n    } else if (bonus.bonusType === CROSS_BONUS) {\r\n      for (let col = 0; col < BOARD_SIZE; col++) {\r\n        matches[bonus.row][col] = true;\r\n      }\r\n      for (let row = 0; row < BOARD_SIZE; row++) {\r\n        matches[row][bonus.col] = true;\r\n      }\r\n    }\r\n    return matches;\r\n  }\r\n\r\n  function findPossibleMove(board) {\r\n    for (let r = 0; r < BOARD_SIZE; r++) {\r\n      for (let c = 0; c < BOARD_SIZE; c++) {\r\n        // Check swap with right neighbor\r\n        if (c < BOARD_SIZE - 1) {\r\n          const newBoard = cloneBoard(board);\r\n          [newBoard[r][c], newBoard[r][c + 1]] = [newBoard[r][c + 1], newBoard[r][c]];\r\n          if (hasAnyMatches(findMatches(newBoard).matches)) {\r\n            return [[r, c], [r, c + 1]];\r\n          }\r\n        }\r\n        // Check swap with bottom neighbor\r\n        if (r < BOARD_SIZE - 1) {\r\n          const newBoard = cloneBoard(board);\r\n          [newBoard[r][c], newBoard[r + 1][c]] = [newBoard[r + 1][c], newBoard[r][c]];\r\n          if (hasAnyMatches(findMatches(newBoard).matches)) {\r\n            return [[r, c], [r + 1, c]];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null; // No possible moves\r\n  }\r\n\r\n  function getRandomPrice() {\r\n    // Віртуальна ціна для кожної монети (рандомно)\r\n    return (Math.random() * 10000 + 10).toFixed(2);\r\n  }\r\n\r\n  // Додаю функцію для початкового гаманця з prevPrice\r\n  function getInitialWallet() {\r\n    const obj = {};\r\n    ALL_TOKENS.forEach(t => obj[t] = { amount: 0 });\r\n    return obj;\r\n  }\r\n\r\n  // Додаю функцію для початкових цін з prevPrice\r\n  function getInitialTokenPrices() {\r\n    const obj = {};\r\n    ALL_TOKENS.forEach(t => obj[t] = { price: getRandomPrice(), prevPrice: null });\r\n    return obj;\r\n  }\r\n\r\n  // Оновлена функція для оновлення цін з prevPrice\r\n  function updateMarketPrices() {\r\n    setTokenPrices(prices => {\r\n      const obj = {};\r\n      ALL_TOKENS.forEach(t => {\r\n        obj[t] = {\r\n          prevPrice: prices[t]?.price ?? null,\r\n          price: getRandomPrice(),\r\n        };\r\n      });\r\n      return obj;\r\n    });\r\n  }\r\n\r\n  // Таймер\r\n  useEffect(() => {\r\n    if (gameOver || levelCompleted) return;\r\n    \r\n    const mode = GAME_MODES[gameMode];\r\n    \r\n    if (mode.hasTimer && timer <= 0) {\r\n      // Для режимів з таймером\r\n      if (mode.hasLevels) {\r\n        // Кампанія: перевіряємо ціль\r\n        if (score < targetScore) {\r\n          if (lives > 1) {\r\n            setLives(l => l - 1);\r\n            setTimer(mode.timeLimit || LEVELS[level].time);\r\n            setScore(0);\r\n            setBoard(generateBoard());\r\n            setSelected(null);\r\n            setMatches(null);\r\n            setBonuses([]);\r\n          } else {\r\n            setLives(0);\r\n            setGameOver(true);\r\n          }\r\n        } else {\r\n          setGameOver(true);\r\n        }\r\n      } else {\r\n        // Інші режими з таймером: просто закінчуємо гру\r\n        setGameOver(true);\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // Для режиму пазл: перевіряємо ходи\r\n    if (mode.moveLimit && movesLeft <= 0) {\r\n      if (score >= targetScore) {\r\n        setLevelCompleted(true);\r\n      } else {\r\n        setGameOver(true);\r\n      }\r\n      return;\r\n    }\r\n    \r\n    if (mode.hasTimer) {\r\n      const interval = setInterval(() => {\r\n        setTimer(t => t - 1);\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [timer, gameOver, levelCompleted, score, targetScore, lives, level, gameMode, movesLeft]);\r\n\r\n  // Перевірка на проходження рівня\r\n  useEffect(() => {\r\n    const mode = GAME_MODES[gameMode];\r\n    \r\n    if (mode.hasLevels && !levelCompleted && score >= targetScore) {\r\n      // Для кампанії: перевіряємо і місію\r\n      if (mode.hasMissions) {\r\n        const mission = MISSIONS[level % MISSIONS.length];\r\n        if (missionProgress >= mission.count) {\r\n          setLevelCompleted(true);\r\n        }\r\n      } else {\r\n        setLevelCompleted(true);\r\n      }\r\n    } else if (!mode.hasLevels && score >= targetScore) {\r\n      // Для інших режимів: просто досягнення цілі\r\n      setLevelCompleted(true);\r\n    }\r\n  }, [score, targetScore, levelCompleted, level, gameMode, missionProgress]);\r\n\r\n  // Очищення стартових матчів\r\n  useEffect(() => {\r\n    let b = board;\r\n    let { matches: m, bonuses: bs, matchGroups: mg } = findMatches(b);\r\n    while (hasAnyMatches(m)) {\r\n      let points = 0;\r\n      for (const group of mg) {\r\n        if (group.count === 3) points += 10 * 3;\r\n        else if (group.count >= 4) points += 20 * group.count;\r\n      }\r\n      setScore(s => s + points);\r\n      b = removeMatchesAndDrop(b, m, bs);\r\n      const res = findMatches(b);\r\n      m = res.matches;\r\n      bs = res.bonuses;\r\n      mg = res.matchGroups;\r\n    }\r\n    setBoard(b);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // Анімація зникнення\r\n  useEffect(() => {\r\n    if (!matches) return;\r\n    setIsAnimating(true);\r\n    const animations = [];\r\n    for (let row = 0; row < BOARD_SIZE; row++) {\r\n      for (let col = 0; col < BOARD_SIZE; col++) {\r\n        if (matches[row][col]) {\r\n          animations.push(\r\n            Animated.timing(opacityAnim[row][col], {\r\n              toValue: 0,\r\n              duration: ANIMATION_DURATION,\r\n              useNativeDriver: true,\r\n            })\r\n          );\r\n        }\r\n      }\r\n    }\r\n    Animated.parallel(animations).start(() => {\r\n      let points = 0;\r\n      if (matches && matches.length) {\r\n        let { matchGroups } = findMatches(board);\r\n        for (const group of matchGroups) {\r\n          if (group.count === 3) points += 10 * 3;\r\n          else if (group.count >= 4) points += 20 * group.count;\r\n        }\r\n      }\r\n      setScore(s => s + points);\r\n      let newBoard = removeMatchesAndDrop(board, matches, bonuses);\r\n      for (let row = 0; row < BOARD_SIZE; row++) {\r\n        for (let col = 0; col < BOARD_SIZE; col++) {\r\n          opacityAnim[row][col].setValue(1);\r\n        }\r\n      }\r\n      if (bonuses.length > 0) {\r\n        let tempBoard = newBoard;\r\n        let bonusMatches = null;\r\n        let bonusIndex = 0;\r\n        function activateNextBonus() {\r\n          if (bonusIndex >= bonuses.length) {\r\n            const res = findMatches(tempBoard);\r\n            if (hasAnyMatches(res.matches)) {\r\n              setBoard(tempBoard);\r\n              setMatches(res.matches);\r\n              setBonuses(res.bonuses);\r\n            } else {\r\n              setBoard(tempBoard);\r\n              setMatches(null);\r\n              setBonuses([]);\r\n              setIsAnimating(false);\r\n            }\r\n            return;\r\n          }\r\n          const bonus = bonuses[bonusIndex];\r\n          bonusMatches = getBonusMatches(tempBoard, bonus, bonus.color);\r\n          let collectedFromBonus = 0;\r\n          for (let row = 0; row < BOARD_SIZE; row++) {\r\n            for (let col = 0; col < BOARD_SIZE; col++) {\r\n              if (bonusMatches[row][col] && tempBoard[row][col] === MISSIONS[level % MISSIONS.length].symbol) {\r\n                collectedFromBonus++;\r\n              }\r\n            }\r\n          }\r\n          if (collectedFromBonus > 0) setMissionProgress(p => p + collectedFromBonus);\r\n          let bonusPoints = 0;\r\n          for (let row = 0; row < BOARD_SIZE; row++) {\r\n            for (let col = 0; col < BOARD_SIZE; col++) {\r\n              if (bonusMatches[row][col]) bonusPoints += 50;\r\n            }\r\n          }\r\n          setScore(s => s + bonusPoints);\r\n          const bonusAnims = [];\r\n          for (let row = 0; row < BOARD_SIZE; row++) {\r\n            for (let col = 0; col < BOARD_SIZE; col++) {\r\n              if (bonusMatches[row][col]) {\r\n                bonusAnims.push(\r\n                  Animated.timing(opacityAnim[row][col], {\r\n                    toValue: 0,\r\n                    duration: ANIMATION_DURATION,\r\n                    useNativeDriver: true,\r\n                  })\r\n                );\r\n              }\r\n            }\r\n          }\r\n          Animated.parallel(bonusAnims).start(() => {\r\n            tempBoard = activateBonus(tempBoard, bonus, bonus.color);\r\n            for (let row = 0; row < BOARD_SIZE; row++) {\r\n              for (let col = 0; col < BOARD_SIZE; col++) {\r\n                if (bonusMatches[row][col]) {\r\n                  opacityAnim[row][col].setValue(1);\r\n                }\r\n              }\r\n            }\r\n            tempBoard = removeMatchesAndDrop(tempBoard, bonusMatches);\r\n            bonusIndex++;\r\n            activateNextBonus();\r\n          });\r\n        }\r\n        activateNextBonus();\r\n      } else {\r\n        const res = findMatches(newBoard);\r\n        if (hasAnyMatches(res.matches)) {\r\n          setBoard(newBoard);\r\n          setMatches(res.matches);\r\n          setBonuses(res.bonuses);\r\n        } else {\r\n          setBoard(newBoard);\r\n          setMatches(null);\r\n          setBonuses([]);\r\n          setIsAnimating(false);\r\n        }\r\n      }\r\n    });\r\n    // eslint-disable-next-line\r\n  }, [matches]);\r\n\r\n  // Анімація появи/зникнення оверлею рівня\r\n  useEffect(() => {\r\n    if (levelCompleted && !gameOver) {\r\n      Animated.timing(overlayAnim, {\r\n        toValue: 1,\r\n        duration: 400,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(overlayAnim, {\r\n        toValue: 0,\r\n        duration: 400,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [levelCompleted, gameOver]);\r\n\r\n  // Оновлюємо прогрес місії при кожному матчі\r\n  useEffect(() => {\r\n    if (!matches) return;\r\n    const mission = MISSIONS[level % MISSIONS.length];\r\n    let collected = 0;\r\n    for (let row = 0; row < BOARD_SIZE; row++) {\r\n      for (let col = 0; col < BOARD_SIZE; col++) {\r\n        if (matches[row][col] && board[row][col] === mission.symbol) {\r\n          collected++;\r\n        }\r\n      }\r\n    }\r\n    if (collected > 0) setMissionProgress(p => p + collected);\r\n  }, [matches]);\r\n\r\n  // Скидаємо прогрес місії при старті/рестарті рівня\r\n  useEffect(() => {\r\n    setMissionProgress(0);\r\n  }, [level, gameOver]);\r\n\r\n  // Перевірка на проходження рівня: і очки, і місія\r\n  useEffect(() => {\r\n    const mission = MISSIONS[level % MISSIONS.length];\r\n    if (!levelCompleted && score >= targetScore && missionProgress >= mission.count) {\r\n      setLevelCompleted(true);\r\n    }\r\n  }, [score, targetScore, missionProgress, levelCompleted, level]);\r\n\r\n  // Таймер підказок\r\n  useEffect(() => {\r\n    const stopHintTimer = () => {\r\n      if (hintTimer.current) clearTimeout(hintTimer.current);\r\n      setHint(null);\r\n    };\r\n\r\n    if (!isAnimating && !gameOver && !levelCompleted) {\r\n      hintTimer.current = setTimeout(() => {\r\n        const move = findPossibleMove(board);\r\n        if (move) {\r\n          setHint(move);\r\n          setNoMovesAvailable(false);\r\n        } else {\r\n          setNoMovesAvailable(true);\r\n          setHint(null);\r\n        }\r\n      }, 3000); // 3 секунди\r\n    } else {\r\n      stopHintTimer();\r\n      setNoMovesAvailable(false);\r\n    }\r\n\r\n    return stopHintTimer;\r\n  }, [isAnimating, gameOver, levelCompleted, board]);\r\n\r\n  // Анімація підказки\r\n  useEffect(() => {\r\n    if (hint) {\r\n      hintAnimation.current = Animated.loop(\r\n        Animated.sequence([\r\n          Animated.timing(hintAnim, { toValue: 1.2, duration: 400, useNativeDriver: true }),\r\n          Animated.timing(hintAnim, { toValue: 1, duration: 400, useNativeDriver: true }),\r\n        ])\r\n      );\r\n      hintAnimation.current.start();\r\n    } else {\r\n      if (hintAnimation.current) {\r\n        hintAnimation.current.stop();\r\n      }\r\n      hintAnim.setValue(1);\r\n    }\r\n  }, [hint]);\r\n\r\n  // Після проходження рівня — додаємо монети у гаманець і показуємо гаманець\r\n  useEffect(() => {\r\n    if (levelCompleted && !showWallet) {\r\n      const mission = MISSIONS[level % MISSIONS.length];\r\n      const earned = {};\r\n      \r\n      // Додаємо монети з місії\r\n      if (GAME_MODES[gameMode].hasMissions) {\r\n        earned[mission.symbol] = mission.count;\r\n        setWallet(w => ({\r\n          ...w,\r\n          [mission.symbol]: {\r\n            ...w[mission.symbol],\r\n            amount: w[mission.symbol].amount + mission.count\r\n          }\r\n        }));\r\n      }\r\n      \r\n      // Додаємо монети з гри (за матчі)\r\n      const totalEarned = Math.floor(score / 100); // Кожні 100 очок = 1 монета\r\n      if (totalEarned > 0) {\r\n        const randomToken = availableTokens[Math.floor(Math.random() * availableTokens.length)];\r\n        earned[randomToken] = (earned[randomToken] || 0) + totalEarned;\r\n        setWallet(w => ({\r\n          ...w,\r\n          [randomToken]: {\r\n            ...w[randomToken],\r\n            amount: w[randomToken].amount + totalEarned\r\n          }\r\n        }));\r\n      }\r\n      \r\n      setEarnedCoins(earned);\r\n      \r\n      updateMarketPrices();\r\n      setTimeout(() => setShowWallet(true), 800);\r\n    }\r\n  }, [levelCompleted]);\r\n\r\n  // При переході на наступний рівень ховаємо гаманець\r\n  useEffect(() => {\r\n    setShowWallet(false);\r\n  }, [level]);\r\n\r\n  // Оновлюємо дошку коли змінюються доступні монети\r\n  useEffect(() => {\r\n    if (availableTokens.length > 0) {\r\n      setBoard(generateBoard());\r\n    }\r\n  }, [availableTokens]);\r\n\r\n  // Додаю кнопку \"Далі\" для переходу до наступного рівня\r\n  const handleNextLevel = () => {\r\n    setShowWallet(false);\r\n    setLevelCompleted(false);\r\n    setEarnedCoins({}); // Скидаємо зароблені монети\r\n    setNoMovesAvailable(false); // Скидаємо стан \"немає ходів\"\r\n    \r\n    const nextLevel = level + 1;\r\n    if (gameMode === 'classic') {\r\n      // Класичний режим: ціль зростає\r\n      setTargetScore(t => t + 200);\r\n    } else if (gameMode === 'campaign') {\r\n      if (nextLevel < LEVELS.length) {\r\n        setTargetScore(LEVELS[nextLevel].target);\r\n      } else {\r\n        setGameOver(true);\r\n        setScreen('main');\r\n        return;\r\n      }\r\n    }\r\n    setLevel(nextLevel);\r\n    setTimer(LEVELS[nextLevel].time + 5 * nextLevel);\r\n    setScore(0);\r\n    setBoard(generateBoard());\r\n    setSelected(null);\r\n    setMatches(null);\r\n    setBonuses([]);\r\n    setGameOver(false);\r\n    setLives(INITIAL_LIVES);\r\n    setMissionProgress(0);\r\n    setScreen('game');\r\n  };\r\n\r\n  const handleCellPress = (row, col) => {\r\n    if (isAnimating || gameOver || levelCompleted) return;\r\n    \r\n    const mode = GAME_MODES[gameMode];\r\n    \r\n    // Перевіряємо ліміт ходів для режиму пазл\r\n    if (mode.moveLimit && movesLeft <= 0) return;\r\n    \r\n    if (!selected) {\r\n      setSelected([row, col]);\r\n      return;\r\n    }\r\n    const [selRow, selCol] = selected;\r\n    if (selRow === row && selCol === col) {\r\n      setSelected(null);\r\n      return;\r\n    }\r\n    if (!areAdjacent([selRow, selCol], [row, col])) {\r\n      setSelected([row, col]);\r\n      return;\r\n    }\r\n    let newBoard = cloneBoard(board);\r\n    [newBoard[selRow][selCol], newBoard[row][col]] = [newBoard[row][col], newBoard[selRow][selCol]];\r\n    let { matches: foundMatches, bonuses: foundBonuses, matchGroups: foundGroups } = findMatches(newBoard);\r\n    if (hasAnyMatches(foundMatches)) {\r\n      setHint(null); // Скидаємо підказку\r\n      setNoMovesAvailable(false); // Скидаємо стан \"немає ходів\"\r\n      setBoard(newBoard);\r\n      setMatches(foundMatches);\r\n      setBonuses(foundBonuses);\r\n      \r\n      // Зменшуємо кількість ходів для режиму пазл\r\n      if (mode.moveLimit) {\r\n        setMovesLeft(prev => prev - 1);\r\n      }\r\n      \r\n      // Додаємо бонус часу для режиму спідран\r\n      if (mode.timeBonus && foundMatches) {\r\n        const matchCount = foundMatches.flat().filter(Boolean).length;\r\n        if (matchCount >= 3) {\r\n          setTimeBonus(prev => prev + 2);\r\n          setTimer(prev => prev + 2);\r\n        }\r\n      }\r\n    } else {\r\n      setBoard(cloneBoard(board));\r\n    }\r\n    setSelected(null);\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    const mode = GAME_MODES[gameMode];\r\n    \r\n    setLevel(0);\r\n    setScore(0);\r\n    setBoard(generateBoard());\r\n    setSelected(null);\r\n    setMatches(null);\r\n    setBonuses([]);\r\n    setGameOver(false);\r\n    setLevelCompleted(false);\r\n    setMissionProgress(0);\r\n    setMovesLeft(mode.moveLimit || 20);\r\n    setTimeBonus(0);\r\n    setEarnedCoins({}); // Скидаємо зароблені монети\r\n    setShowWallet(false);\r\n    setNoMovesAvailable(false); // Скидаємо стан \"немає ходів\"\r\n    setHint(null); // Скидаємо підказку\r\n    \r\n    // Налаштування для різних режимів\r\n    if (mode.hasTimer) {\r\n      setTimer(mode.timeLimit || LEVELS[0].time);\r\n    } else {\r\n      setTimer(999999); // Безмежний час\r\n    }\r\n    \r\n    if (mode.hasLevels) {\r\n      setTargetScore(LEVELS[0].target);\r\n    } else {\r\n      setTargetScore(mode.timeLimit ? 99999 : 1000);\r\n    }\r\n    \r\n    setLives(mode.lives);\r\n    \r\n    // Встановлюємо доступні монети для режиму\r\n    setAvailableTokens(mode.startingTokens);\r\n    \r\n    setScreen('game');\r\n  };\r\n\r\n  // Оновлюю місця, де раніше було setTokenPrices(...), на updateMarketPrices()\r\n  // ... existing code ...\r\n  // Оновлюю buyCoin, щоб працював з новою структурою wallet і tokenPrices\r\n  const buyCoin = (coinSymbol) => {\r\n    const coin = COIN_SHOP.find(c => c.symbol === coinSymbol);\r\n    if (!coin || coin.owned) return;\r\n    const totalMoney = ALL_TOKENS.reduce((sum, t) => sum + wallet[t].amount * tokenPrices[t].price, 0);\r\n    if (totalMoney >= coin.price) {\r\n      let remainingCost = coin.price;\r\n      const newWallet = { ...wallet };\r\n      const sortedTokens = ALL_TOKENS.sort((a, b) => tokenPrices[a].price - tokenPrices[b].price);\r\n      for (const token of sortedTokens) {\r\n        if (remainingCost <= 0) break;\r\n        const tokenValue = newWallet[token].amount * tokenPrices[token].price;\r\n        if (tokenValue > 0) {\r\n          if (tokenValue >= remainingCost) {\r\n            const tokensToSell = Math.ceil(remainingCost / tokenPrices[token].price);\r\n            newWallet[token] = {\r\n              ...newWallet[token],\r\n              amount: Math.max(0, newWallet[token].amount - tokensToSell)\r\n            };\r\n            remainingCost = 0;\r\n          } else {\r\n            remainingCost -= tokenValue;\r\n            newWallet[token] = {\r\n              ...newWallet[token],\r\n              amount: 0\r\n            };\r\n          }\r\n        }\r\n      }\r\n      if (remainingCost <= 0) {\r\n        setWallet(newWallet);\r\n        setAvailableTokens(prev => [...prev, coinSymbol]);\r\n        updateMarketPrices();\r\n        setBoard(generateBoard());\r\n      }\r\n    }\r\n  };\r\n\r\n  // Оновлюю renderWalletScreen для відображення динаміки ціни\r\n  const renderWalletScreen = () => (\r\n    <View style={styles.walletOverlay}>\r\n      <Text style={styles.walletTitle}>Твій крипто-гаманець</Text>\r\n      {ALL_TOKENS.map(token => {\r\n        const price = tokenPrices[token].price;\r\n        const prev = tokenPrices[token].prevPrice;\r\n        let trend = '';\r\n        if (prev !== null) {\r\n          if (price > prev) trend = '↑';\r\n          else if (price < prev) trend = '↓';\r\n          else trend = '→';\r\n        }\r\n        return (\r\n          <View key={token} style={styles.walletRow}>\r\n            <Text style={styles.walletToken}>{token}</Text>\r\n            <Text style={styles.walletAmount}>{wallet[token].amount} шт.</Text>\r\n            <Text style={styles.walletPrice}>${price} {trend}</Text>\r\n          </View>\r\n        );\r\n      })}\r\n      <Text style={styles.walletTotal}>\r\n        Вартість портфеля: ${ALL_TOKENS.reduce((sum, t) => sum + wallet[t].amount * tokenPrices[t].price, 0).toFixed(2)}\r\n      </Text>\r\n      <Button title=\"Назад\" onPress={() => setScreen('main')} />\r\n    </View>\r\n  );\r\n\r\n  // Екран вибору режиму\r\n  const renderGameModeScreen = () => (\r\n    <View style={styles.menuContainer}>\r\n      <Text style={styles.menuTitle}>Обери режим</Text>\r\n      {Object.entries(GAME_MODES).map(([key, mode]) => (\r\n        <TouchableOpacity \r\n          key={key} \r\n          style={styles.menuButton} \r\n          onPress={() => { \r\n            setGameMode(key); \r\n            handleRestart(); \r\n          }}\r\n        >\r\n          <Text style={styles.menuButtonText}>{mode.name}</Text>\r\n          <Text style={styles.menuButtonDesc}>{mode.description}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n      <Button title=\"Назад\" onPress={() => setScreen('main')} />\r\n    </View>\r\n  );\r\n\r\n  // Головне меню\r\n  const renderMainMenu = () => (\r\n    <View style={styles.menuContainer}>\r\n      <Text style={styles.menuTitle}>Crypto Match</Text>\r\n      <TouchableOpacity style={styles.menuButton} onPress={() => setScreen('gameMode')}>\r\n        <Text style={styles.menuButtonText}>Грати</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.menuButton} onPress={() => setScreen('wallet')}>\r\n        <Text style={styles.menuButtonText}>Гаманець</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.menuButton} onPress={() => setScreen('shop')}>\r\n        <Text style={styles.menuButtonText}>Магазин монет</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.menuButton} onPress={() => setScreen('upgrades')}>\r\n        <Text style={styles.menuButtonText}>Покращення</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n\r\n  // Екран магазину монет\r\n  const renderShopScreen = () => {\r\n    const totalMoney = ALL_TOKENS.reduce((sum, t) => sum + wallet[t].amount * tokenPrices[t].price, 0);\r\n    \r\n    return (\r\n      <View style={styles.shopOverlay}>\r\n        <Text style={styles.shopTitle}>Магазин монет</Text>\r\n        <Text style={styles.shopBalance}>Баланс: ${totalMoney.toFixed(2)}</Text>\r\n        \r\n        <View style={styles.shopGrid}>\r\n          {COIN_SHOP.map(coin => {\r\n            const isOwned = availableTokens.includes(coin.symbol);\r\n            const canAfford = totalMoney >= coin.price;\r\n            \r\n            return (\r\n              <View key={coin.symbol} style={[styles.shopItem, isOwned && styles.ownedItem]}>\r\n                <Text style={styles.shopCoinSymbol}>{coin.symbol}</Text>\r\n                <Text style={styles.shopCoinName}>{coin.name}</Text>\r\n                <Text style={styles.shopCoinDesc}>{coin.description}</Text>\r\n                {isOwned ? (\r\n                  <Text style={styles.ownedText}>Власність</Text>\r\n                ) : (\r\n                  <>\r\n                    <Text style={styles.shopCoinPrice}>${coin.price}</Text>\r\n                    <TouchableOpacity \r\n                      style={[styles.buyButton, !canAfford && styles.disabledButton]}\r\n                      onPress={() => buyCoin(coin.symbol)}\r\n                      disabled={!canAfford}\r\n                    >\r\n                      <Text style={styles.buyButtonText}>\r\n                        {canAfford ? 'Купити' : 'Недостатньо коштів'}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </>\r\n                )}\r\n              </View>\r\n            );\r\n          })}\r\n        </View>\r\n        \r\n        <Button title=\"Назад\" onPress={() => setScreen('main')} />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  // Екран покращень (заглушка)\r\n  const renderUpgradesScreen = () => (\r\n    <View style={styles.walletOverlay}>\r\n      <Text style={styles.walletTitle}>Покращення (скоро)</Text>\r\n      <Button title=\"Назад\" onPress={() => setScreen('main')} />\r\n    </View>\r\n  );\r\n\r\n  // Функція перемішування дошки\r\n  const shuffleBoard = () => {\r\n    if (isAnimating || gameOver || levelCompleted) return;\r\n    \r\n    // Створюємо нову дошку з тими ж монетами, але в іншому порядку\r\n    const allCoins = [];\r\n    for (let row = 0; row < BOARD_SIZE; row++) {\r\n      for (let col = 0; col < BOARD_SIZE; col++) {\r\n        if (board[row][col]) {\r\n          allCoins.push(board[row][col]);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Перемішуємо монети\r\n    for (let i = allCoins.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [allCoins[i], allCoins[j]] = [allCoins[j], allCoins[i]];\r\n    }\r\n    \r\n    // Створюємо нову дошку\r\n    const newBoard = Array.from({ length: BOARD_SIZE }, () => Array(BOARD_SIZE).fill(null));\r\n    let coinIndex = 0;\r\n    \r\n    for (let row = 0; row < BOARD_SIZE; row++) {\r\n      for (let col = 0; col < BOARD_SIZE; col++) {\r\n        if (coinIndex < allCoins.length) {\r\n          newBoard[row][col] = allCoins[coinIndex];\r\n          coinIndex++;\r\n        } else {\r\n          newBoard[row][col] = getRandomEmoji();\r\n        }\r\n      }\r\n    }\r\n    \r\n    setBoard(newBoard);\r\n    setNoMovesAvailable(false);\r\n    setHint(null);\r\n  };\r\n\r\n  // Функція повернення в головне меню\r\n  const returnToMainMenu = () => {\r\n    setGameOver(false);\r\n    setLevelCompleted(false);\r\n    setShowWallet(false);\r\n    setEarnedCoins({});\r\n    setNoMovesAvailable(false);\r\n    setHint(null);\r\n    setSelected(null);\r\n    setMatches(null);\r\n    setBonuses([]);\r\n    setScore(0);\r\n    setLevel(0);\r\n    setMissionProgress(0);\r\n    setMovesLeft(20);\r\n    setTimeBonus(0);\r\n    setScreen('main');\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {screen === 'main' && renderMainMenu()}\r\n      {screen === 'gameMode' && renderGameModeScreen()}\r\n      {screen === 'wallet' && renderWalletScreen()}\r\n      {screen === 'shop' && renderShopScreen()}\r\n      {screen === 'upgrades' && renderUpgradesScreen()}\r\n      {screen === 'game' && (\r\n        <>\r\n          <Text style={styles.title}>Crypto Match</Text>\r\n          <Text style={styles.level}>\r\n            {GAME_MODES[gameMode].hasLevels ? `Ринок: ${level + 1}` : GAME_MODES[gameMode].name}\r\n          </Text>\r\n          <Text style={styles.lives}>\r\n            Гаманці: {'👜'.repeat(lives) + '⬜️'.repeat(Math.max(0, 10 - lives))}\r\n          </Text>\r\n          <Text style={styles.score}>Баланс: {score} / {targetScore}</Text>\r\n          \r\n          {/* Показуємо таймер тільки для режимів з часом */}\r\n          {GAME_MODES[gameMode].hasTimer && (\r\n            <Text style={styles.timer}>\r\n              Час: {timer} сек {timeBonus > 0 && `(+${timeBonus})`}\r\n            </Text>\r\n          )}\r\n          \r\n          {/* Показуємо ходи для режиму пазл */}\r\n          {GAME_MODES[gameMode].moveLimit && (\r\n            <Text style={styles.moves}>Ходи: {movesLeft}</Text>\r\n          )}\r\n          \r\n          {/* Місія тільки для кампанії */}\r\n          {GAME_MODES[gameMode].hasMissions && (\r\n            <Text style={styles.mission}>\r\n              Місія: Збери {MISSIONS[level % MISSIONS.length].count} {MISSIONS[level % MISSIONS.length].name} {MISSIONS[level % MISSIONS.length].symbol} — {missionProgress} / {MISSIONS[level % MISSIONS.length].count}\r\n            </Text>\r\n          )}\r\n          \r\n          <View style={styles.board}>\r\n            {board.map((row, rowIndex) => (\r\n              <View key={rowIndex} style={styles.row}>\r\n                {row.map((cell, colIndex) => {\r\n                  const isSelected = selected && selected[0] === rowIndex && selected[1] === colIndex;\r\n                  const isHinted = hint && (\r\n                    (hint[0][0] === rowIndex && hint[0][1] === colIndex) ||\r\n                    (hint[1][0] === rowIndex && hint[1][1] === colIndex)\r\n                  );\r\n                  return (\r\n                    <TouchableOpacity\r\n                      key={colIndex}\r\n                      style={[styles.cell, isSelected && styles.selectedCell]}\r\n                      activeOpacity={0.7}\r\n                      onPress={() => handleCellPress(rowIndex, colIndex)}\r\n                      disabled={isAnimating || gameOver || levelCompleted || (GAME_MODES[gameMode].moveLimit && movesLeft <= 0)}\r\n                    >\r\n                      <Animated.View style={{ opacity: opacityAnim[rowIndex][colIndex], transform: [{ scale: isHinted ? hintAnim : 1 }] }}>\r\n                        <Text style={styles.emoji}>{cell}</Text>\r\n                      </Animated.View>\r\n                    </TouchableOpacity>\r\n                  );\r\n                })}\r\n              </View>\r\n            ))}\r\n          </View>\r\n          \r\n          <Text style={styles.info}>\r\n            {GAME_MODES[gameMode].timeBonus ? \r\n              'Швидкі матчі дають бонус часу!' :\r\n              'Збирай криптомонети! 4 в ряд — 🚀 Pump, 5 в ряд — 💥 Crypto Bomb, L/T — 💣 Exchange Crash!'\r\n            }\r\n          </Text>\r\n          \r\n          {/* Кнопка перемішування */}\r\n          {noMovesAvailable && !isAnimating && !gameOver && !levelCompleted && (\r\n            <View style={styles.shuffleContainer}>\r\n              <Text style={styles.noMovesText}>Немає можливих ходів!</Text>\r\n              <TouchableOpacity style={styles.shuffleButton} onPress={shuffleBoard}>\r\n                <Text style={styles.shuffleButtonText}>🔄 Перемішати</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n          \r\n          {gameOver && (\r\n            <View style={styles.overlay}>\r\n              <Text style={styles.gameOverText}>\r\n                {levelCompleted ? 'Рівень пройдено!' : 'Гру завершено!'}\r\n              </Text>\r\n              <View style={styles.gameOverButtons}>\r\n                <TouchableOpacity style={styles.gameOverButton} onPress={handleRestart}>\r\n                  <Text style={styles.gameOverButtonText}>Почати спочатку</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.gameOverButton} onPress={returnToMainMenu}>\r\n                  <Text style={styles.gameOverButtonText}>Головне меню</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          )}\r\n          \r\n          {showWallet && renderWallet()}\r\n          {levelCompleted && !gameOver && !showWallet && (\r\n            <Animated.View style={[styles.overlay, { opacity: overlayAnim }]}> \r\n              <Text style={styles.gameOverText}>Рівень пройдено! Наступний стартує...</Text>\r\n            </Animated.View>\r\n          )}\r\n        </>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#222',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    color: '#fff',\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  level: {\r\n    color: '#fff',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  lives: {\r\n    color: '#fff',\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  score: {\r\n    color: '#fff',\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  timer: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 12,\r\n  },\r\n  board: {\r\n    backgroundColor: '#333',\r\n    padding: 8,\r\n    borderRadius: 16,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n  },\r\n  cell: {\r\n    width: 48,\r\n    height: 48,\r\n    margin: 4,\r\n    backgroundColor: '#444',\r\n    borderRadius: 24,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderWidth: 2,\r\n    borderColor: 'transparent',\r\n  },\r\n  selectedCell: {\r\n    borderColor: '#fff',\r\n  },\r\n  emoji: {\r\n    fontSize: 32,\r\n  },\r\n  info: {\r\n    color: '#aaa',\r\n    marginTop: 24,\r\n    fontSize: 16,\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0,0,0,0.7)',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  gameOverText: {\r\n    color: '#fff',\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginBottom: 24,\r\n    textAlign: 'center',\r\n  },\r\n  mission: {\r\n    color: '#ffd700',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n    textAlign: 'center',\r\n  },\r\n  walletOverlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(20,20,30,0.98)',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 10,\r\n  },\r\n  walletTitle: {\r\n    color: '#ffd700',\r\n    fontSize: 26,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  walletRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  walletToken: {\r\n    fontSize: 28,\r\n    width: 40,\r\n    textAlign: 'center',\r\n  },\r\n  walletAmount: {\r\n    color: '#fff',\r\n    fontSize: 20,\r\n    width: 80,\r\n    textAlign: 'center',\r\n  },\r\n  walletPrice: {\r\n    color: '#0f0',\r\n    fontSize: 18,\r\n    width: 100,\r\n    textAlign: 'center',\r\n  },\r\n  walletTotal: {\r\n    color: '#fff',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginVertical: 16,\r\n  },\r\n  walletButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    width: '100%',\r\n    marginTop: 24,\r\n  },\r\n  menuContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#222',\r\n  },\r\n  menuTitle: {\r\n    color: '#ffd700',\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    marginBottom: 48,\r\n  },\r\n  menuButton: {\r\n    backgroundColor: '#333',\r\n    paddingVertical: 18,\r\n    paddingHorizontal: 48,\r\n    borderRadius: 16,\r\n    marginBottom: 24,\r\n    width: 220,\r\n    alignItems: 'center',\r\n  },\r\n  menuButtonText: {\r\n    color: '#fff',\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 1,\r\n  },\r\n  menuButtonDesc: {\r\n    color: '#aaa',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n  shopOverlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(20,20,30,0.98)',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 10,\r\n  },\r\n  shopTitle: {\r\n    color: '#ffd700',\r\n    fontSize: 26,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  shopBalance: {\r\n    color: '#0f0',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 24,\r\n  },\r\n  shopGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    maxWidth: 400,\r\n    marginBottom: 24,\r\n  },\r\n  shopItem: {\r\n    backgroundColor: '#333',\r\n    padding: 16,\r\n    margin: 8,\r\n    borderRadius: 12,\r\n    alignItems: 'center',\r\n    width: 120,\r\n    borderWidth: 2,\r\n    borderColor: '#555',\r\n  },\r\n  ownedItem: {\r\n    borderColor: '#ffd700',\r\n    backgroundColor: '#2a2a1a',\r\n  },\r\n  shopCoinSymbol: {\r\n    fontSize: 32,\r\n    marginBottom: 8,\r\n  },\r\n  shopCoinName: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n    textAlign: 'center',\r\n  },\r\n  shopCoinDesc: {\r\n    color: '#aaa',\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  shopCoinPrice: {\r\n    color: '#0f0',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  buyButton: {\r\n    backgroundColor: '#4CAF50',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 16,\r\n    borderRadius: 8,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: '#666',\r\n  },\r\n  buyButtonText: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  ownedText: {\r\n    color: '#ffd700',\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  moves: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  earnedCoinsContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  earnedCoinItem: {\r\n    backgroundColor: '#333',\r\n    padding: 8,\r\n    margin: 4,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n  },\r\n  earnedCoinSymbol: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  earnedCoinAmount: {\r\n    color: '#0f0',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  earnedCoinValue: {\r\n    color: '#0f0',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  earnedTotal: {\r\n    color: '#fff',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginTop: 16,\r\n  },\r\n  noEarnings: {\r\n    color: '#aaa',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  nextLevelButton: {\r\n    backgroundColor: '#4CAF50',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderRadius: 8,\r\n  },\r\n  nextLevelButtonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  mainMenuButton: {\r\n    backgroundColor: '#4CAF50',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderRadius: 8,\r\n  },\r\n  mainMenuButtonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  shuffleContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 16,\r\n  },\r\n  noMovesText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginRight: 8,\r\n  },\r\n  shuffleButton: {\r\n    backgroundColor: '#4CAF50',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 16,\r\n    borderRadius: 8,\r\n  },\r\n  shuffleButtonText: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  gameOverButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    width: '100%',\r\n    marginTop: 24,\r\n  },\r\n  gameOverButton: {\r\n    backgroundColor: '#4CAF50',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderRadius: 8,\r\n  },\r\n  gameOverButtonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}